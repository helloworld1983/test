\" mds8360/target.ref - Freescale MPC8360MDS target specific documentation
\"
\" Copyright (c) 2006, 2008, 2012 Wind River Systems, Inc.
\"
\" The right to copy, distribute, modify or otherwise make use
\" of this software may be licensed only pursuant to the terms
\" of an applicable Wind River license agreement.
\"
\" modification history
\" --------------------
\" 01e,28feb12,c_l  Update the description of Security Engine.(WIND00331832)
\" 01d,03sep08,z_l  Added SEC test instructions.
\" 01c,29jul08,z_l  New instructions of programming flash and other comments.
\" 01b,07jan08,z_l  Updated for MDS8360EA.
\" 01a,22jun06,dtr  Adapted from ADS834x BSP target.ref.
\"
\TITLE mds8360 - Freescale MPC8360MDS

NAME
`Freescale MDS8360 - PQ2PRO'

EXTERNAL DEPENDENCIES

The support of Security Engine requires VxWorks 6.7 MSP be installed. Please refer 
to "Security Engine" section of this documentation for more detailed information.

INTRODUCTION
This section includes getting-started information, including subsections
detailing ROM installation, boot ROM flash instructions, and jumper 
settings for VxWorks operation.

The BSP will work with the rev PROTOTYPE and REV0.5/0.6 of the MDS8360 board.
Rev1.1/Rev1.2 silicon was tested and is supported.

The BSP which has version number later than 2.0/3 support both MDS8360 
and MDS8360EA, macro MPC8360EA_MDS is used in config.h to build different
bootloader and vxWorks image. For MDS8360EA board, only Pilot-C(CPU Rev 2.1)
is tested.

\sh Board Switch Settings

The board must have the switch and jumpers set to appropriate values before
software can be loaded into the memory, or before flash memory can be 
programmed as described below.

In order to get the board running with the default configuration, the
switches need to be set as follows:

For MDS8360 board: 

\ts
    Switch Number | Switch ON           | Switch OFF
    ------------------------------------------------
    SW3           | 6                   | 1,2,3,4,5,7,8
    SW4           | 3,4                 | 1,2,5,6,7,8
    SW9           | 2,3,6,7             | 1,4,5,8
    SW10          | 5                   | 1,2,3,4,6,7,8
\te


For MDS8360EA board: 

\ts
    Switch Number | Switch ON           | Switch OFF
    ------------------------------------------------
    SW3           | 1,2,3,4,5,7,8       | 6
    SW4           | 1,2,5,6,7,8         | 3,4
    SW9           | 1,4,5,8             | 2,3,6,7
    SW10          | 1,2,3,4,6,7,8       | 5
\te

\sh Getting the board running VxWorks
   This section will guide you how to run VxWorks on the MDS8360 or MDS8360EA board.

1. Creating a bootrom.bin:
    1.1 Launch Workbench 3.1, go to the "File" menu and choose the option
        "New" -> "VxWorks Boot Loader / BSP Project".

    1.2 The "New VxWorks Boot Loader / BSP Project" window will popup, input a
        project name then click "Next" button. In the next window, choose the BSP
        as "mds8360", "Tool chain" could be set as "Diab", in the 
        "Boot loader / BSP image" part, choose the style as "Compressed (default)",
        "Format" as "Bin", then press the "Finish" button to finish the project
        creation.

    1.3 Once the build process finish successfully (You will see "Build Finished"
        in the "Build Console" window without error), you will find the file
        "bootrom.bin" in the BSP directory "$(WIND_BASE)/target/config/mds8360". 

2. Programming bootrom.bin to the MDS8360 or MDS8360EA FLASH:
   Support for MPC8360 part is available with Workbench 3.1.

   Using Workbench, complete the following steps to flash your boot ROM image:

    2.1 Install Wind River Probe or Wind River ICE and power it on.

        Connect the JTAG interface cable from the Wind River Probe or Wind 
        River ICE to the ADS8360 board's JTAG connector (P8).
        Once the connections have been made, power up the MDS8360 
        board and launch Workbench on the host.     

    2.2 Configure the Wind River Probe or Wind River ICE connection.

        In Workbench on the left pane, there is a "Remote Systems" window. 
        Click on the "Define a connection to remote system" button. In the popup
        "New Connection" window, select the Connection type as 
        "Wind River OCD ICE Connection" for Wind River ICE and "Wind River 
        OCD Probe Connection" for Wind River Probe. If the Wind River ICE 
        is connected via serial port, specify the configuration else select
        "Specify all communication settings manually". 

        In the "Wind River ICE Settings" or "Wind River Probe Settings", 
        select the Board file by clicking on the "Board file" radio button and
        browse to the appropriate board file. For example:
        "$WIND_OCD_PATH/BoardFiles/PowerPC/83xx/Freescale/Freescale_MDS8360.brd"
        Select "Auto-attach to connected designators" checkbox. In the 
        "Communications" tab, "Emulator Hostname / IP address" of ICE for Wind 
        River ICE or "USB Device Name" for Wind River Probe. Connect 
        Workbench OCD with the Wind River Probe or Wind River ICE 
        by clicking the "Next" and then "Finish" button. A New connection 
        appears in the "Remote Systems" window.

    2.3 Program Wind River Probe / Wind River ICE with the proper register 
        settings for the MDS8360 board.

        To view/modify the Wind River ICE firmware setting, terminate the
        debug session for Wind River ICE. In the "Remote Systems" window,
        right click on the newly connected OCD connection. Select 
        "OCD Utilities". To know about the current firmware information, 
        select "Emulator firmware version information". To download the new
        firmware, Select "Firmware Download" and select appropriate file 
        from "$WIND_OCD_PATH/CommonHardwareFiles/*.bin".

        Go to the "OCD Command Shell" and click on the "Settings" button.
        The OCD Command Shell Settings dialog appears, where you can 
        select the appropriate register file. Navigate to the location of
        the appropriate register configuration file. The folder of register 
        file is '\INSTALLDIR\workbench-3.1\ocd\0133\RegisterFiles\PowerPC\83xx\Freescale\', 
        the register file of MDS8360 board is 'MDS8360.reg', and 'MDS8360_Rev2.reg' 
        is the register file of MDS8360 board. 

        After choosing the register file, press the "OK" button. In the OCD Command
        Shell, click the "Playback File" button. The selected register file is
        downloaded to the target and the commands from the file appear in the
        OCD command shell. When playback is finished the ">BKM>" or the ">ERR>"
        prompt returns.

    2.4 Get into Background Mode.

        Execute the "IN" command to reset the board and initialize it with
        the register setting.
\cs
            IN
\ce
        Type 'mmb 0xf800000a 0x0' at the BKM Prompt to unlock flash write protection.
        If you have problems resetting the board using ICE/Probe you can use
        from bkm prompt in the OCD command shell 
        BKM>cf rcw 0x04040006 0xb0600000.

    2.5 Program the MDS8360 or MDS8360EA Flash.

        In WindRiver OCD, Select the "Flash Programmer". The 
        "Flash Programmer" view has three tabs: "Configuration", 
        "Programming" and "Memory/Diagnostics".

        2.5.1 Select the "Configuration" tab. In the "Device Selection' 
            field, select the "INTEL 28F128Jx (4096x16) 1 Device" for 
            MDS8360 board and "AMD S29GL256N (16384x16) 1 Device" for 
            MDS8360EA board.

            In "Flash Bank Address" group for the "Base" enter "FE000000" . 
            In the "RAM Workspace" group for the "Workspace Start at"
            enter "0x00000000" and for the "Workspace Size" enter 
            "0x8000".

        2.5.2 Click on the "Programming" tab. Select the "Add File" 
            button, in the popup window, select the newly generated
            "$(WIND_BASE)/target/config/mds8360/bootrom.bin", and click
            the "This is a raw binary file" checkbox then click "OK" to finish
            file adding. Click the "Start Address" and set it as "0xfe000000",
            the "End Address" will be fixed automatically. Please notice that
            the "Start Address" should include the "Offset bias".
            Enable a file by clicking on the checkbox under the "Enabled" heading.

        2.5.3 In the "Erase Sector Selection" pane, select addresses
            fe000000 through fe07ffff.  Press the "Erase/Program" 
            button to erase the flash and then program the flash with selected
            "bootrom.bin" file. A window pops up to show the progress of the
            Flash device programming. When it is complete, the Flash should
            contain the new boot program.

3. Hardware configuration settings.

Once the flash has been programmed, the switch settings 'SW9 3-0' should be changed to 
'SW9 3-1' to execute the bootrom. Note that this step is only required for MDS8360EA board.

FEATURES

\sh Supported Features (REV 0.5 or later board revisions)

\sh List of Hardware Features

\ts
Hardware Interface   | Controller  | Driver/Component        | Status
---------------------------------------------------------------------
UART:0               | on-chip     | vxbNs16550Sio.c         | SUPPORTED
UART:1               | on-chip     | vxbNs16550Sio.c         | SUPPORTED
NOR-FLASH            | S29GL256N   | flashMem.c              | SUPPORTED
1GB-ETHERNET:1       | on-chip     | vxbUccEnd.c             | SUPPORTED
1GB-ETHERNET:2       | on-chip     | vxbUccEnd.c             | SUPPORTED
TIMER                | on-chip     | vxbPpcDecTimer.c        | SUPPORTED
TIMER                | on-chip     | vxbPpcQuiccTimer.c      | SUPPORTED
I2C                  | on-chip     | sysMotI2c.c             | SUPPORTED
PCI1                 | on-chip     | m83xxPci.c              | SUPPORTED
SEC                  | on-chip     | INCLUDE_SECURITY_ENGINE | SUPPORTED
PCI2                 | on-chip     | m83xxPci.c              | UNSUPPORTED
USB-HOST/TARGET      | on-chip     |                         | UNSUPPORTED
\te

\sh Feature Interactions
Refer to the board vendor's documentation.

HARDWARE DETAILS
This section discusses memory maps for each bus and lists of interrupt levels 
and/or vector numbers for each interrupting source.

\sh Verified Hardware
This BSP has been verified on the following board and silicon:

\cs
    MDS8360 board REV0.5/0.6 with MPC8360E REV1.1/1.2
    MDS8360EA board REV0.5 with MPC8360EA REV2.1
\ce

\sh Memory Maps

The following table describes the MDS8360 default memory map:
\ts

Start | Size | End | Access to
------------------------------
0x0000_0000 | 256MB | 0x0FFF_FFFF | DDR SDRAM
0x1000_0000 | 64MB  | 0x13FF_FFFF | LBC SDRAM 
0x8000_0000 | 256MB | 0x8FFF_FFFF | PCI1
0x9000_0000 | 256MB | 0x9FFF_FFFF | PCI2
0xF800_0000 | 64KB  | 0xF800_FFFF | BCSR
0xE000_0000 | 1MB   | 0xE00F_FFFF | Configuration Registers 
0xFE00_0000 | 2MB   | 0xFE1F_FFFF | NOR Flash

\te

The following table describes the MDS8360EA default memory map:
\ts

Start | Size | End | Access to
------------------------------
0x0000_0000 | 256MB | 0x0FFF_FFFF | DDR SDRAM
0x1000_0000 | 64MB  | 0x13FF_FFFF | LBC SDRAM 
0x8000_0000 | 256MB | 0x8FFF_FFFF | PCI1
0x9000_0000 | 256MB | 0x9FFF_FFFF | PCI2
0xF800_0000 | 64KB  | 0xF800_FFFF | BCSR
0xE000_0000 | 1MB   | 0xE00F_FFFF | Configuration Registers 
0xFE00_0000 | 32MB  | 0xFFFF_FFFF | NOR Flash

\te

\sh Serial Configuration
Default configuration is:

\ts
    Baud Rate   : 9600
    Data        : 8 bit
    Parity      : None
    Stop        : 1 bit
    Flow Control: None
\te

\sh Network Configuration
The UCC1 and UCC2 ports allow 10/100/1000T connection. The driver will auto-negotiate 
and configure the port accordingly. Intel FEI8255x(PCI) ethernet card are tested 
successfully with this BSP.

\sh Security Engine.
The Freescale Security Engine (SEC) 2.4 is supported in this release.
The VxWorks PNE MSP must be installed to enable security engine offload.

1. Create a VSB(VxWorks Source Build).

   1.1 Create a VSB in any directory. For instance, run the command:

\cs
       $WIND_BASE/target/proj/vxprj vsb create -bsp mds8360 myVsb_bsp_mds8360
\ce

       This command creates a VSB for the BSP mds8360, myVsb_bsp_mds8360 is the name of 
       this VSP.

   1.2 Configure VSB

       After run the command in 1.1, you will be prompted to select the 
       configuration options of this new VSB. Below is a example of 
       configuration result:

\cs
        starting VSB configuration...
        *
        * VxWorks Source Build (VSB) Configuration
        *
        *
        * VxWorks Global Configuration Options for BSP mds8360
        *
        Set advanced options  (ADVANCED_OPT) [N/y/?] (NEW) y
        *
        * mds8360_CPU = PPC32
        *
        Select the Floating Point configuration
        > 1. hard (FP_hard) (NEW)
        choice[1]: 1
        Select the ENDIAN configuration
        > 1. big (ENDIAN_big) (NEW)
        choice[1]: 1
        Select the Primary Tool
        > 1. diab (PRI_TOOL_ILP32_diab) (NEW)
        choice[1]: 1
        optional compiler flags for mds8360_TOOL [?]  (ADDEDCFLAGS) [] (NEW)
        Enable use of Secondary TOOL to build kernel libraries.  (ENABLE_TOOL2_ILP32) [Y/n/?] (NEW) Y
          Select the Secondary Tool
          > 1. gnu (SEC_TOOL_ILP32_gnu) (NEW)
          choice[1]: 1
        optional compiler flags for mds8360_TOOL2 [?]  (ADDEDCFLAGS2) [] (NEW)
        Select the Applications Tool
        > 1. diab (APP_TOOL_ILP32_diab) (NEW)
          2. gnu (APP_TOOL_ILP32_gnu) (NEW)
        choice[1-2?]: 1
        optional compiler flags for mds8360_APP_TOOL [?]  (ADDEDCFLAGS_APP) [] (NEW)
        *
        * ppc Architecture Options
        *
        Low-level arch code need not support inconsistent cache modes  (PPC_CACHE_MODE_IS_CONSISTENT) [N/y/?] (NEW)
        System Viewer Instrumentation  (SV_INSTRUMENTATION) [Y/n/?] (NEW) Y
        Global Debug Flag  (DEBUG_FLAG) [N/y/?] (NEW)
        Real-Time Process (RTP)  (RTP) [Y/n/?] (NEW) Y
        *
        * VxWorks Kernel Configuration Options
        *
        *
        * VxWorks Kernel Component Configuration
        *
        WIND Object Management  (OBJECT_MANAGEMENT) [Y/n/?] (NEW) Y
          WIND Object ID Validation  (OBJECT_VERIFICATION) [Y/n/?] (NEW) Y
        Task Create Hooks  (TASK_CREATE_HOOKS_D) [Y/n/?] (NEW) Y
        Task Switch Hooks  (TASK_SWITCH_HOOKS_D) [Y/n/?] (NEW) Y
        CPU Power Management  (CPU_PWR_MGMT_D) [Y/n/?] (NEW) Y
        *
        * Multi-OS Support
        *
        MIPC  (COMPONENT_MIPC) [Y/n/?] (NEW) n
        WRLOAD  (COMPONENT_WRLOAD) [Y/n/?] (NEW) n
        *
        * Optional Kernel Features
        *
        Enable Kernel Per-Task CWD  (PERTASK_CWD) [Y/n/?] (NEW)
        *
        * File System Configuration
        *
        Set Maximum Device Name Length  (MAX_DEVNAME) [10] (NEW)
        Optimize NFS3 server read/write procedure  (NFS3_RWOPT) [N/y/?] (NEW)
        Set factor for maximum block size transferred in NFS3 server  (NFS3_BLKSIZE_FACTOR) [1] (NEW)
        Enable VXTESTV2  (COMPONENT_VXTESTV2_D) [Y/n/?] (NEW)
        Enable BENCHMARK tests  (COMPONENT_BENCHMARK) [N/y/?] (NEW)
        Enable Code Coverage Analyzer test instrumentation of VSB   (COMPONENT_COVERAGE) [N/y/?] (NEW)
        *
        * VxWorks Applications Configuration Options
        *
        Select networking code to be built
        > 1. Build Networking IPNET Libraries (COMPONENT_IPNET) (NEW)
          2. No Networking Libraries (NO_IP) (NEW)
        choice[1-2]: 1
        *
        * Networking Build Options
        *
        Set the IPNET build mode
        > 1. speed mode (BUILD_MODE_speed) (NEW)
          2. debug mode (BUILD_MODE_debug) (NEW)
        choice[1-2]: 1
        Enable VERBOSE mode  (FEATURE_IPNET_VERBOSE) [N/y] (NEW) y
        Generate IPNET Dependencies  (FEATURE_IPNET_GEN_DEPEND) [Y/n] (NEW) Y
        Build basic IPNET support libraries  (BUILD_BASIC_IPNET) [Y/n/?] (NEW) Y
        Choose the Networking Libraries to be built
        > 1. Build libraries with IPV4 support (FEATURE_IPNET_INET4_ONLY) (NEW)
          2. Build libraries with IPV4 and IPV6 support (FEATURE_IPNET_INET6) (NEW)
          3. Build libraries with IPV6 support (FEATURE_IPNET_INET6_ONLY) (NEW)
        choice[1-3]: 1
        Select the default Build-time Syslog level for Networking Components
          1. Emergency level (IPCOM_DEFAULT_SYSLOG_PRIORITY_EMERG) (NEW)
          2. Critical level (IPCOM_DEFAULT_SYSLOG_PRIORITY_CRIT) (NEW)
          3. Error level (IPCOM_DEFAULT_SYSLOG_PRIORITY_ERR) (NEW)
        > 4. Warning level (IPCOM_DEFAULT_SYSLOG_PRIORITY_WARNING) (NEW)
          5. Notice level (IPCOM_DEFAULT_SYSLOG_PRIORITY_NOTICE) (NEW)
          6. Informational level (IPCOM_DEFAULT_SYSLOG_PRIORITY_INFO) (NEW)
          7. Debug level (IPCOM_DEFAULT_SYSLOG_PRIORITY_DEBUG) (NEW)
          8. Detailed debug level (IPCOM_DEFAULT_SYSLOG_PRIORITY_DEBUG2) (NEW)
        choice[1-8?]: 4
        Enable selection of Advanced Debugging Build Options for Networking Component   (IPCOM_DEBUG_ADVANCED) [N/y/?] (NEW)
        Enable MSP Feature Set PAD  (MSP_FEATURE_PAD) [Y/n/?] (NEW) n
        Enable MSP Feature Set PCD  (MSP_FEATURE_PCD) [Y/n/?] (NEW) n
        Enable MSP Feature Set PID  (MSP_FEATURE_PID) [Y/n/?] (NEW) n
        Enable MSP Feature Set PNE  (MSP_FEATURE_PNE) [Y/n/?] (NEW) Y
        *
        * VxWorks Networking Component Configuration
        *
        *
        * Layer 2 (Link) Components
        *
        Enable L2TP  (COMPONENT_IPL2TP) [N/y/?] (NEW)
        Enable MACsec  (COMPONENT_IPMACSEC) [N/y/?] (NEW)
        Enable PPP  (COMPONENT_IPPPP) [Y/n/?] (NEW)
        Enable 802.1ad VLAN stacking  (COMPONENT_VLAN_STACKING) [N/y/?] (NEW)
        Enable WLAN  (COMPONENT_WLAN) [N/y/?] (NEW)
        *
        * Layer 3 (Network) Components
        *
        Enable FIREWALL  (COMPONENT_IPFIREWALL) [N/y/?] (NEW)
        Enable IPSEC  (COMPONENT_IPIPSEC) [N/y/?] (NEW)
        Enable MPLS  (COMPONENT_IPMPLS) [N/y] (NEW)
        Enable ROHC  (COMPONENT_IPROHC) [N/y/?] (NEW)
        Enable IPNET Network Address Translation (NAT)  (COMPONENT_NAT) [Y/n/?] (NEW) n
        Enable Quality of Service and Differentiated Services  (COMPONENT_DIFF_SERV) [Y/n/?] (NEW) n
        Enable tunneling support  (COMPONENT_TUNNEL_SUPPORT) [Y/n/?] (NEW) n
        *
        * Layer 4 (Transport) Components
        *
        Enable SCTP  (COMPONENT_IPSCTP) [N/y/?] (NEW)
        *
        * Layer 5 (Applications) Components
        *
        Enable 802.1X Authenticator  (COMPONENT_DOT1X) [N/y/?] (NEW)
        Enable 802.1X Supplicant  (COMPONENT_IP8021X) [N/y/?] (NEW)
        Enable APPL  (COMPONENT_IPAPPL) [Y/n/?] (NEW) Y
        Enable DHCPR  (COMPONENT_IPDHCPR) [N/y] (NEW)
        Enable DHCPS  (COMPONENT_IPDHCPS) [N/y/?] (NEW)
        *
        * Diameter Components
        *
        Enable DIAMETER Client  (COMPONENT_IPDIAMETERC) [N/y/?] (NEW)
        Enable DIAMETER Proxy  (COMPONENT_IPDIAMETERP) [N/y/?] (NEW)
        Enable IKE  (COMPONENT_IPIKE) [N/y/?] (NEW)
        Enable Multicast Proxy daemon  (COMPONENT_IPMCP) [N/y/?] (NEW)
        Enable MIP  (COMPONENT_IPMIP) [N/y/?] (NEW)
        Enable MIP4  (COMPONENT_IPMIP4) [N/y/?] (NEW)
        Enable MIPFA  (COMPONENT_IPMIPFA) [N/y/?] (NEW)
        Enable MIPHA  (COMPONENT_IPMIPHA) [N/y/?] (NEW)
        Enable MIPMN  (COMPONENT_IPMIPMN) [N/y/?] (NEW)
        Enable MIPPM  (COMPONENT_IPMIPPM) [N/y/?] (NEW)
        Enable RADIUS  (COMPONENT_IPRADIUS) [Y/n/?] (NEW) n
        Enable RIP  (COMPONENT_IPRIP) [N/y] (NEW)
        Enable SNMP  (COMPONENT_SNMP) [Y/n/?] (NEW) n
        Enable SNTP  (COMPONENT_IPSNTP) [Y/n/?] (NEW) n
        Enable SSH  (COMPONENT_IPSSH) [N/y/?] (NEW) y
        Enable SSL  (COMPONENT_IPSSL) [Y/n/?] (NEW) Y
        *
        * WPS requires COMPONENT_WLAN and COMPONENT_IPEAP and COMPONENT_IP8021X to be selected and COMPONENT_IPCRYPTO_USE_FIPS_140_2 to be deselected
        *
        *
        * Cryptography Components
        *
        *
        * Component CRYPTO preselected - required by  Component SSL
        *
        Enable CRYPTO  (COMPONENT_IPCRYPTO) [Y/?] (NEW) y
          Enable FIPS 140-2 validated crypto libraries  (COMPONENT_IPCRYPTO_USE_FIPS_140_2) [N/y/?] (NEW)
        Enable FREESCALE  (COMPONENT_IPFREESCALE) [N/y/?] (NEW) y
        Enable HWCRYPTO  (COMPONENT_IPHWCRYPTO) [N/y/?] (NEW) y
        *
        * Networking Library Components
        *
        Enable EAP  (COMPONENT_IPEAP) [N/y/?] (NEW)
        Enable VXCOMPAT  (COMPONENT_VXCOMPAT) [Y/n/?] (NEW) Y
        *
        * Networking Acceleration Platform Components
        *
        Enable IFPROXY  (COMPONENT_IFPROXY) [N/y/?] (NEW)
        Enable WRNAD  (COMPONENT_WRNAD) [N/y/?] (NEW)
        *
        * Common Analysis Framework Components
        *
        *
        * COMPONENT CAFE and COMPONENT_STACKTRACE are used by analysis tools
        *
        Enable CAFE framework  (COMPONENT_CAFE) [Y/n/?] (NEW) n
        *
        * Stacktrace Debug Component
        *
        Enable stacktrace debugging output  (COMPONENT_STACKTRACE_DEBUG) [N/y] (NEW)
        Route stacktrace debugging output to a session logger  (COMPONENT_STACKTRACE_SESSION_LOGGER) [N/y] (NEW)
        *
        * Target Communication Framework (TCF) Agent Component
        *
        Enable TCF_AGENT  (COMPONENT_TCF_AGENT) [Y/n/?] (NEW) n
        Enable WM  (COMPONENT_WM) [Y/n/?] (NEW) n
        Enable XML  (COMPONENT_XML) [Y/n/?] (NEW) Y
        *
        * VxWorks User Library Configuration
        *
        Build User-side libraries  (FEATURE_USR) [Y/n/?] (NEW) Y
          Choose the User Networking Libraries to be built
          > 1. Build libraries with IPV4 support (USR_INET4_ONLY) (NEW)
            2. Build libraries with IPV4 and IPV6 support (USR_INET6) (NEW)
            3. Build libraries with IPV6 support (USR_INET6_ONLY) (NEW)
          choice[1-3]: 1
          Build User Networking Libraries  (COMPONENT_USR_IPNET) [Y/n/?] (NEW) Y
          Build core USR APPS  (COMPONENT_USR_APPS) [Y/n/?] (NEW) Y
            Build test USR APPS  (COMPONENT_USR_TEST) [Y/n/?] (NEW) n
          Build USR libraries for DOT1X  (COMPONENT_USR_DOT1X) [N/y/?] (NEW)
          Build USR libraries for SNMP  (COMPONENT_USR_SNMP) [N/y/?] (NEW)
          Build USR libraries for WM  (COMPONENT_USR_WM) [N/y/?] (NEW)
          Build USR libraries for XML  (COMPONENT_USR_XML) [Y/n/?] (NEW) Y
          Build USR libraries for SNMP_V3  (COMPONENT_USR_SNMP_V3) [N/y/?] (NEW)
          Build USR libraries for SNMP_AGENTX  (COMPONENT_USR_SNMP_AGENTX) [N/y/?] (NEW)
          
        This VSB supports the following BSPs: mds8360
\ce

        Note that 'Enable MSP Feature Set PNE' must be set to 'Yes' and other 'Enable MSP Feature 
        Set' must be set to 'No'. And some options like "Enable FREESCALE" are 
        also required to test Freescale's SEC.

    1.3 Build VSB. 

        Run the following command to build the libraries based on the selected 
        options.

\cs
        cd myVsb_bsp_mds8360
        make
\ce

2. Create a VIP based on the new VSB.

    2.1 Create a VIP, in the step of "Project Setup", select new VSB which is created 
        above as the configuration of "A source build project", and select the 
        correct BSP.

    2.2 Configure and build VIP.
    
        In the Kernel Configuration editor include INCLUDE_IPFREESCALE. For 
        Freescale MDS8360EA board set two parameters as follows:

\cs
        SEC2_CORE_VERSION = "2.4"
        SEC2_DEVICE_FAMILY = "2".
\ce

        build this VIP.

    2.3 Test the Security Engine

        Download the image file, then issue the command 'freescale test all'  from the VxWorks target shell .

        For Freescale MDS8360EA board you should see:

\cs
        -> ipcom_run_cmd "freescale test all"                                          
        freescale :: testing md5 hash...success                                        
        freescale :: testing md5 hmac...success                                        
        freescale :: testing sha1 hash...success                                       
        freescale :: testing sha1 hmac...success                                       
        freescale :: testing des cbc cipher...success                                  
        freescale :: testing des ecb cipher...success                                  
        freescale :: testing 3des cbc cipher...success                                 
        freescale :: testing 3des ecb cipher...success                                 
        freescale :: testing aes cbc cipher...success                                  
        freescale :: testing aes ecb cipher...success                                  
        freescale :: testing rc4 cipher...success                                      
        freescale :: testing rng oper...success                                        
        freescale :: testing mod exp...success 
\ce

\sh Boot Devices
The supported boot devices are:

\ts
    `qefcc0'   | - Primary Ethernet (10baseT, 100baseTX, or 1000baseT)
    `qefcc1'   | - Secondary Ethernet (10baseT, 100baseTX, or 1000baseT)
    `tffs'     | - TFFS
\te

\sh Boot Methods
The boot methods are affected by the boot parameters.  If no password is
specified, RSH (remote shell) protocol is used.  If a password is specified,
FTP protocol is used, or, if the flag is set, TFTP protocol is used.

SPECIAL CONSIDERATIONS
This section identifies the unique characteristics of the board. It includes
all information needed by the user that does not fit in any other section. 

\sh TrueFFS
The standard Wind River TrueFFS product is supported in this release, to use it, 
change "#undef INCLUDE_TFFS" to "#define INCLUDE_TFFS" then the relative macros 
will be defined automatically.

This BSP uses the Spansion S29GL256 flash as the TrueFFS media. 
The flash address space that is used as TFFS is 0xff000000 - 0xffffffff. 
When using TrueFFS on a new flash for the first time, you should format and 
configure the FLASH by using:
\cs
    sysTffsFormat ();
    usrTffsConfig (0, 0, "/tffs0");
    dosfsDiskFormat ("/tffs0");     /@ For VxWorks 6.6 and later version @/
\ce

Note: If you are running these commands in the VxWorks target shell, please
use
\cs
    sp sysTffsFormat
\ce
to format the flash as it would take long time to complete.

You should now be able to use VxWorks I/O and file system commands to access
the FLASH device as if it were a disk. If you put a VxWorks image in your FTP
home directory, then it could be tested by using following commands:
\cs
    devs
    copy ("vxWorks", "/tffs0/vxWorks");
\ce

TrueFFS is supported only in MDS8360EA.

\sh PCI
PCI1 is supported in this BSP. INCLUDE_PCI_BUS must be defined in config.h(change "#undef INCLUDE_PCI_BUS" 
to "#define INCLUDE_PCI_BUS" then the relative macros will be defined automatically)if you want to use 
the devices populated in PCI slot. In addition, because only Intel fei82557/9 is tested, definition 
INCLUDE_FEI8255X_VXB_END is also required in config.h.
PCI1 supported 64bit/66Mhz
PCI2 interface is partially tested and therefore unsupported.

\sh Make Targets
The make targets are listed as the names of object-format files. Append `.hex' to each to derive a 
hex-format file name. Other images not listed here may not be tested.

\ts
`bootrom'
'bootrom.bin'
'bootrom.hex'
`vxWorks' (with `vxWorks.sym')
`vxWorks.st'
\te

\sh BSP Bootloaders and Bootroms

\ts
Bootloader/Bootrom    | Status
------------------------------
Uboot (pre-flashed)   | UNSUPPORTED
bootrom               | SUPPORTED
bootrom_uncmp         | SUPPORTED
vxWorks               | SUPPORTED
vxWorks_rom           | SUPPORTED
vxWorks_romCompress   | SUPPORTED
vxWorks_romResident   | SUPPORTED
\te

\sh BSP Validated Tools

\ts
Tool                          | Connection/Type   | Status
----------------------------------------------------------
Workbench Debugger            | ETHERNET/WDB      | SUPPORTED
Workbench System Viewer       | ETHERNET/WDB      | SUPPORTED
Workbench MemScope            | ETHERNET/WDB      | SUPPORTED
Workbench ProfileScope        | ETHERNET/WDB      | SUPPORTED
Workbench StethoScope         | ETHERNET/WDB      | SUPPORTED
Workbench CoverageScope       | ETHERNET/WDB      | SUPPORTED
Workbench Core File Analysis  | ETHERNET/WDB      | UNVALIDATED
Workbench Sensor Points       | ETHERNET/WDB      | UNVALIDATED
Workbench OCD Debugger        | JTAG              | SUPPORTED
Workbench OCD Flash           | JTAG              | SUPPORTED
\te

\sh Special Routines
None

\sh Serial Connections
Most VxWorks BSPs do not use hardware handshaking in the serial
interface, and thus a simple 3 wire connection is commonly used

\sh Ethernet Address
The MPC8360 board does not have a unique Ethernet hardware address
assigned to each board.  A unique address is absolutely necessary 
if the user wishes to connect the board to a network. Thus, the user
must provide a suitable 6 byte Ethernet address for each board used
on a network.

The definition of macro ETHERNET_MAC_HANDLER in config.h indicates the MAC
address is stored in NVRAM and alterable via the "M" bootrom command. This
option allows only the last three bytes to be changed. To use this option,
open a console window and reset the hardware. When the bootrom banner appears
and the countdown starts, press any key to get the "[VxWorks Boot]:" prompt.
Type 'M' and follow the instructions.

\sh Known Problems
Issue with unmapped address access when MMU is enabled is hanging the board. 
It can cause reboot/vxMemProbe to fail on occasion. Cause is unknown yet but 
can clear the state with debugger using sync command, memory access and 
resume, not always successful.
CPU4 errata means that unpopulated address access when MMU is disabled is 
hanging the board. It is possible to clear the state with debugger using 
sync command,memory access and resume, not always successful. 
PCI device scan can make the system hang if there is no PCI card inserted on
the board, so PCI module can only be supported in case PCI card is populated
and related macros in config.h are defined.

\sh Power-on Reset Initialization
The state of the chip post reset is controlled via the HRCW.
The hardware reset configuration word(HRCW) is set via programming a bootrom.
The definitions are in mds8360.h and are set in config.h. To change this 
setting you must modify config.h and rebuild and replace the bootrom.

If a Wind River ICE or Probe cannot enter background mode (BKM) when attempting
to connect to the board, the Hardware Reset Configuration Words (HRCWs) in Flash
memory may have been corrupted.  To get into BKM, set the HRCWs in the processor
by entering "cf rcw 0x04040006 0xb0600000" at the >ERR> prompt. 

\sh SYSCLK Frequency
66MHz is supported

BOARD LAYOUT

The diagram below shows top view of MDS8360 board.

         +----------------+
   +-----|----------------|---------------------------------------------------+ 
   |     |     COP        |                                                   | 
   |     +----------------+                                           +-------+ 
   |                                                                  |       | 
   |                                                                  | UART  | 
   |                                                                  |       | 
   |                                                  +--------+      +-------+ 
   |                                                  |        |              | 
   |                                   +--------+     |        |              | 
   |                                   |        |     | MPC8360|              | 
   |                                   |        |     |        |              | 
   |                      +---------+  |  FLASH |     |        |              | 
   |                      |         |  |        |     +--------+              | 
   |                      |         |  |        |                             | 
   |                      |  BCSR   |  +--------+                             | 
   |                      |         |                                         | 
   |                      |         |                                         | 
   |                      +---------+                                 +-------+ 
   |                                                                  |       | 
   |       SW10         SW4                                           | GETH2 | 
   |   +----------+ +----------+                                      |       | 
   |   |----------| |----------|                                      +-------+ 
   |   +----------+ +----------+                                              | 
   |       SW9          SW3                                           +-------+ 
   |   +----------+ +----------+                                      |       | 
   |   |----------| |----------|                                      | GETH1 | 
   |   +----------+ +----------+                                      |       | 
   |                                                                  +-------+ 
   |                                                                          | 
   |                                                                          | 
   +--------------------------------------------------------------------------+ 

BIBLIOGRAPHY

\tb MPC8360 Reference Manual 

\tb MPC8360MDS Board Manual 

\tb E300 Core Reference Maunual 

\tb PowerPC Microprocessor Family: The Programming Environments for 32-bit Microprocessors MPCFPE32B/AD 

WEB RESOURCES

Much of the Freescale documentation can be found on line. The following
URL was correct at the time of writing for semiconductor area. You'll have to 
search the documentation using processor name for specific documentation.

http://www.freescale.com/

SEE ALSO

\tb Workbench User's Guide: Getting Started, 

\tb VxWorks Programmer's Guide: Configuration, 

\tb VxWorks Programmer's Guide: Architecture Supplement 
