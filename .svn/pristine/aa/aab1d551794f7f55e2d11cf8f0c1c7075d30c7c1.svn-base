\" fsl_mpc8360_rdk/target.ref - Freescale MPC8360 RDK target specific documentation
\"
\" Copyright (c) 2007, 2008, 2012 Wind River Systems, Inc.
\"
\" The right to copy, distribute, modify or otherwise make use
\" of this software may be licensed only pursuant to the terms
\" of an applicable Wind River license agreement.
\"
\" modification history
\" --------------------
\" 01g,23mar12,l_z  Update the known issue section for PCI feature. (WIND00135165)
\" 01f,28feb12,c_l  Update the description of Security Engine.(WIND00331832)
\" 01e,03sep08,y_w  Fixed the description of Security Engine section for VxWorks 6.7
\" 01d,31jul08,y_w  Modify to support VxWorks 6.7
\" 01c,07jul08,y_w  Added support for security engine and format clean up.
\" 01b,26dec07,z_l  Updated for vxWorks6.6
\" 01a,13sep07,z_l  Adapted from MDS8360 BSP target.ref.
\"
\TITLE fsl_mpc8360_rdk - Freescale MPC8360 RDK

NAME
`Freescale MPC8360 RDK'

EXTERNAL DEPENDENCIES

The support of Security Engine requires VxWorks 6.7 MSP be installed. Please 
refer to "Security Engine" section of this documentation for more detailed 
information.

INTRODUCTION

This reference entry provides board-specific information necessary to run
VxWorks for the fsl_mpc8360_rdk BSP. Please read the section "Getting the board
running VxWorks" in order to configure the board to run VxWorks.

The BSP will work with the REV1 of the MPC8360 RDK board. Rev2.0/Rev2.1
silicon was tested and is supported.

\sh Jumpers & Switches
The MPC8360 RDK board has no switches.

\sh Getting the board running VxWorks
This section will guide you how to run VxWorks on the Freescale MPC8360 RDK board.

1. Creating a bootrom.bin:
    1.1 Launch Workbench 3.0, go to the "File" menu and choose the option
        "New" -> "VxWorks Boot Loader / BSP Project".

    1.2 The "New VxWorks Boot Loader / BSP Project" window will popup, input a
        project name then click "Next" button. In the next window, choose the BSP
        as "fsl_mpc8360_rdk", "Tool chain" could be set as "Diab", in the 
        "Boot loader / BSP image" part, choose the style as "Compressed (default)",
        "Format" as "Bin", then press the "Finish" button to finish the project
        creation.

    1.3 Once the build process finish successfully (You will see "Build Finished"
        in the "Build Console" window without error), you will find the file
        "bootrom.bin" in the BSP directory "$(WIND_BASE)/target/config/fsl_mpc8360_rdk".

2. Programming bootrom.bin to the MPC8360-RDK FLASH:
   Support for MPC8360 part is available with Workbench 3.0.

   Using Workbench, complete the following steps to flash your boot ROM image:

    2.1 Install Wind River Probe or Wind River ICE and power it on.

        Connect the JTAG interface cable from the Wind River Probe or Wind 
        River ICE to the Freescale MPC8360 RDK board's JTAG connector (J2).
        Once the connections have been made, power up the Freescale MPC8360 RDK
        board and launch Workbench on the host.

    2.2 Configure the Wind River Probe or Wind River ICE connection.

        In Workbench on the left pane, there is a "Remote Systems" window. 
        Click on the "Define a connection to remote system" button. In the popup
        "New Connection" window, select the Connection type as 
        "Wind River OCD ICE Connection" for Wind River ICE and "Wind River 
        OCD Probe Connection" for Wind River Probe. If the Wind River ICE 
        is connected via serial port, specify the configuration else select
        "Specify all communication settings manually". 

        In the "Wind River ICE Settings" or "Wind River Probe Settings", 
        select the Board file by clicking on the "Board file" radio button and
        browse to the appropriate board file. For example:
        "$WIND_OCD_PATH/BoardFiles/PowerPC/83xx/Freescale/Freescale_MDS8360.brd"
        Select "Auto-attach to connected designators" checkbox. In the 
        "Communications" tab, "Emulator Hostname / IP address" of ICE for Wind 
        River ICE or "USB Device Name" for Wind River Probe. Connect 
        Workbench OCD with the Wind River Probe or Wind River ICE 
        by clicking the "Next" and then "Finish" button. A New connection 
        appears in the "Remote Systems" window.

    2.3 Program Wind River Probe / Wind River ICE with the proper register 
        settings for the Freescale MPC8360 RDK board.

        To view/modify the Wind River ICE firmware setting, terminate the 
        debug session for Wind River ICE. In the "Remote Systems" window, 
        right click on the newly connected OCD connection. Select 
        "OCD Utilities". To know about the current firmware information, 
        select "Emulator firmware version information". To download the new
        firmware, Select "Firmware Download" and select appropriate file 
        from "$WIND_OCD_PATH/CommonHardwareFiles/*.bin".

        Go to the "OCD Command Shell" and click on the "Settings" button.
        The OCD Command Shell Settings dialog appears, where you can 
        select the appropriate register file. Navigate to the location of
        the appropriate register configuration file for the Freescale MPC8360
        RDK board (MPC8360RDK.reg which locates in the BSP directory). After
        choosing the register file, press the "OK" button. In the OCD Command
        Shell, click the "Playback File" button. The selected register file is
        downloaded to the target and the commands from the file appear in the
        OCD command shell. When playback is finished the ">BKM>" or the ">ERR>"
        prompt returns.

    2.4 Get into Background Mode.

        Execute the "IN" command to reset the board and initialize it with
        the register setting.
\cs
            IN
\ce

    2.5 Program the Freescale MPC8360 RDK Flash.

        In WindRiver OCD, Select the "Flash Programmer". The 
        "Flash Programmer" view has three tabs: "Configuration", 
        "Programming" and "Memory/Diagnostics".

        2.5.1 Select the "Configuration" tab. In the "Device Selection' 
            field, select the "INTEL -> 28F640P30T -> 4096 x 16 -> 1 Device"

            In "Flash Bank Address" group for the "Base" enter "FF800000" . 
            In the "RAM Workspace" group for the "Workspace Start at"
            enter "0x00000000" and for the "Workspace Size" enter 
            "0x8000".

        2.5.2 Click on the "Programming" tab. Select the "Add File" 
            button, in the popup window, select the newly generated
            "$(WIND_BASE)/target/config/fsl_mpc8360_rdk/bootrom.bin", and click
            the "This is a raw binary file" checkbox then click "OK" to finish
            file adding. Click the "Start Address" and set it as "0xff800000",
            the "End Address" will be fixed automatically. Please notice that
            the "Start Address" should include the "Offset bias".
            Enable a file by clicking on the checkbox under the "Enabled" heading.

        2.5.3 In the "Erase Sector Selection" pane, select addresses
            ff800000 through ff8fffff.  Press the "Erase/Program" 
            button to erase the flash and then program the flash with selected
            "bootrom.bin" file. A window pops up to show the progress of the
            Flash device programming. When it is complete, the Flash should
            contain the new boot program.

FEATURES

This section describes all features of the board, supported or not.
It documents all configurations of the board and the interaction between
features and configuration items.

\sh List of Hardware Features (Freescale MPC8360 RDK REV1 board)

\ts
Hardware Interface | Controller   | Driver/Component   | Status
---------------------------------------------------------------
UART:1             | on-chip      | vxbNs16550Sio.c    | SUPPORTED
UART:2             | on-chip      | vxbNs16550Sio.c    | UNVALIDATED
1GB-ETHERNET:0     | on-chip      | vxbUccEnd.c        | SUPPORTED
1GB-ETHERNET:1     | on-chip      | vxbUccEnd.c        | SUPPORTED
100MBIT-ETHERNET:2 | on-chip      | vxbUccEnd.c        | SUPPORTED
100MBIT-ETHERNET:3 | on-chip      | vxbUccEnd.c        | SUPPORTED
NOR FLASH          | 28F640P30T   | flashMem.c         | SUPPORTED
NAND Flash         | NAND512W3A   | n/a                | UNSUPPORTED
TIMER              | on-chip      | vxbPpcDecTimer.c   | SUPPORTED
                   | on-chip      | vxbPpcQuiccTimer.c | SUPPORTED
GPIO               | on-chip      | n/a                | UNVALIDATED
1GB-ETHERNET:4     | i82540EM     | gei825xxVxbEnd.c   | SUPPORTED
100MBIT-ETHERNET:4 | i82559ER     | fei8255xVxbEnd.c   | SUPPORTED
I2C                | on-chip      | n/a                | UNSUPPORTED
SPI                | on-chip      | n/a                | UNSUPPORTED
GRAPHICS           | MB86294S     | n/a                | UNSUPPORTED
RS-485:1           | on-chip      | n/a                | UNSUPPORTED
RS-485:2           | on-chip      | n/a                | UNSUPPORTED
SATA:1             | n/a          | n/a                | UNSUPPORTED
SATA:2             | n/a          | n/a                | UNSUPPORTED
SATA:3             | n/a          | n/a                | UNSUPPORTED
SATA:4             | n/a          | n/a                | UNSUPPORTED
USB2-Host:0        | on-chip      | n/a                | UNSUPPORTED
USB2-Host:1        | on-chip      | n/a                | UNSUPPORTED
USB2-Host:2        | on-chip      | n/a                | UNSUPPORTED
USB2-Host:3        | on-chip      | n/a                | UNSUPPORTED
USB Device (Debug) | on-chip      | n/a                | UNSUPPORTED
Mini PCI           | on-chip      | n/a                | UNSUPPORTED
PCI-E-HOST:0       | on-chip      | n/a                | UNSUPPORTED
PCI-E-HOST:1       | on-chip      | n/a                | UNSUPPORTED
\te

\sh Feature Interactions
Refer to the board vendor's documentation.

HARDWARE DETAILS

This section documents the details of the device drivers and board
hardware elements.

\sh Verified Hardware
This BSP has been verified on REV1 of Freescale MPC8360E-RDK board, which arms
with MPC8360E REV2.1.

\cs
    Mother Board  FlexATX BASEBOARD - 1008076 REV1
    Daughter Board  MPC8360 SOM - 1008075 REV1
\ce

\sh Memory Map
The following table describes the default memory map of this BSP.

\ts
Start       | Size  | End         | Access to
---------------------------------------------
0x0000_0000 | 256MB | 0x0FFF_FFFF | DDR SDRAM
0x8000_0000 | 128MB | 0x87FF_FFFF | PCI Memory
0x8C00_0000 |  64MB | 0x8FFF_FFFF | PCI IO
0xE000_0000 |   8MB | 0xE07F_FFFF | Internal Registers (MBAR)
0xFF80_0000 |   8MB | 0xFFFF_FFFF | NOR Flash (CS0)
\te

\sh Serial Configuration
Two serial ports on the MPC8360-RDK board family are implemented with MPC8360's
UARTs. UART0 is the  default console channel, accessed via the onboard RS-232
port.

Default configuration is:
    Baud Rate: 9600
    Data: 8 bit
    Parity: None
    Stop: 1 bit
    Flow Control: None

\sh PCI Access
There is only one PCI slot (J10) on the Freescale MPC8360 RDK board.

In order to support PCI devices in this BSP, please define following macros in
config.h first:

\cs
    #   define INCLUDE_PCI_BUS
    #   define INCLUDE_PCI_BUS_AUTOCONF
\ce

The Intel Pro/1000MT 82540EM Gigabit Ethernet adapter is one of the tested PCI
device supported in this release. Define INCLUDE_GEI825XX_VXB_END in config.h to
enable this device.

The Intel Pro100+ (82559) PCI Ethernet adapter is another one tested PCI
device supported in this release. Define INCLUDE_FEI8255X_VXB_END in config.h to
enable this device.

\sh NVRAM Support
This BSP implements NonVolatile RAM via the onboard Flash device. The
nonvolatile memory area is described by macros NV_RAM_ADRS and NV_RAM_SIZE in
config.h.  It normally contains boot parameters and the FEC's MAC address.

\sh Security Engine
Freescale Security Engine (SEC) 2.4 is supported in this release.
VxWorks MSP must be installed to enable security engine offload.

The following steps describe how to enable SEC support of this BSP.

1. Create a VSB (VxWorks Source Build)

    1.1 Create a VSB in any directory. For instance, run the command:

\cs
        $WIND_BASE/target/proj/vxprj vsb create -bsp fsl_mpc8360_rdk myVsb_bsp_8360rdk
\ce

        This command creates a VSB for the BSP fsl_mpc8360_rdk, myVsb_bsp_8360rdk
        is the name of this VSP.

    1.2 Configure VSB

        After run the command in step 1.1, you will be prompted to select the 
        configuration options of this new VSB. Below is a example of 
        configuration result:

\cs
        starting VSB configuration...
        *
        * VxWorks Source Build (VSB) Configuration
        *
        *
        * VxWorks Global Configuration Options for BSP fsl_mpc8360_rdk
        *
        Set advanced options  (ADVANCED_OPT) [N/y/?] (NEW) y
        *
        * fsl_mpc8360_rdk_CPU = PPC32
        *
        Select the Floating Point configuration
        > 1. hard (FP_hard) (NEW)
        choice[1]: 1
        Select the Primary Tool
        > 1. diab (PRI_TOOL_ILP32_diab) (NEW)
        choice[1]: 1
        optional compiler flags for fsl_mpc8360_rdk_TOOL [?]  (ADDEDCFLAGS) [] (NEW)
        Enable use of Secondary TOOL to build kernel libraries.  (ENABLE_TOOL2_ILP32) [Y/n/?] (NEW) Y
          Select the Secondary Tool
          > 1. gnu (SEC_TOOL_ILP32_gnu) (NEW)
          choice[1]: 1
        optional compiler flags for fsl_mpc8360_rdk_TOOL2 [?]  (ADDEDCFLAGS2) [] (NEW)
        Select the Applications Tool
        > 1. diab (APP_TOOL_ILP32_diab) (NEW)
          2. gnu (APP_TOOL_ILP32_gnu) (NEW)
        choice[1-2?]: 1
        optional compiler flags for fsl_mpc8360_rdk_APP_TOOL [?]  (ADDEDCFLAGS_APP) [] (NEW)
        *
        * ppc Architecture Options
        *
        Low-level arch code need not support inconsistent cache modes  (PPC_CACHE_MODE_IS_CONSISTENT) [N/y/?] (NEW)
        System Viewer Instrumentation  (SV_INSTRUMENTATION) [Y/n/?] (NEW) Y
        Global Debug Flag  (DEBUG_FLAG) [N/y/?] (NEW)
        Real-Time Process (RTP)  (RTP) [Y/n/?] (NEW) Y
        *
        * VxWorks Kernel Configuration Options
        *
        *
        * VxWorks Kernel Component Configuration
        *
        WIND Object Management  (OBJECT_MANAGEMENT) [Y/n/?] (NEW) Y
          WIND Object ID Validation  (OBJECT_VERIFICATION) [Y/n/?] (NEW) Y
        Task Create Hooks  (TASK_CREATE_HOOKS_D) [Y/n/?] (NEW) Y
        Task Switch Hooks  (TASK_SWITCH_HOOKS_D) [Y/n/?] (NEW) Y
        CPU Power Management  (CPU_PWR_MGMT_D) [Y/n/?] (NEW) Y
        *
        * Multi-OS Support
        *
        MIPC  (COMPONENT_MIPC) [Y/n/?] (NEW) n
        WRLOAD  (COMPONENT_WRLOAD) [Y/n/?] (NEW) n
        *
        * Optional Kernel Features
        *
        Enable Kernel Per-Task CWD  (PERTASK_CWD) [Y/n/?] (NEW)
        *
        * File System Configuration
        *
        Set Maximum Device Name Length  (MAX_DEVNAME) [10] (NEW)
        Optimize NFS3 server read/write procedure  (NFS3_RWOPT) [N/y/?] (NEW)
        Set factor for maximum block size transferred in NFS3 server  (NFS3_BLKSIZE_FACTOR) [1] (NEW)
        Enable VXTESTV2  (COMPONENT_VXTESTV2_D) [Y/n/?] (NEW)
        Enable BENCHMARK tests  (COMPONENT_BENCHMARK) [N/y/?] (NEW)
        Enable Code Coverage Analyzer test instrumentation of VSB   (COMPONENT_COVERAGE) [N/y/?] (NEW)
        *
        * VxWorks Applications Configuration Options
        *
        Select networking code to be built
        > 1. Build Networking IPNET Libraries (COMPONENT_IPNET) (NEW)
          2. No Networking Libraries (NO_IP) (NEW)
        choice[1-2]: 1
        *
        * Networking Build Options
        *
        Set the IPNET build mode
        > 1. speed mode (BUILD_MODE_speed) (NEW)
          2. debug mode (BUILD_MODE_debug) (NEW)
        choice[1-2]: 1
        Enable VERBOSE mode  (FEATURE_IPNET_VERBOSE) [N/y] (NEW) y
        Generate IPNET Dependencies  (FEATURE_IPNET_GEN_DEPEND) [Y/n] (NEW) Y
        Build basic IPNET support libraries  (BUILD_BASIC_IPNET) [Y/n/?] (NEW) Y
        Choose the Networking Libraries to be built
        > 1. Build libraries with IPV4 support (FEATURE_IPNET_INET4_ONLY) (NEW)
          2. Build libraries with IPV4 and IPV6 support (FEATURE_IPNET_INET6) (NEW)
          3. Build libraries with IPV6 support (FEATURE_IPNET_INET6_ONLY) (NEW)
        choice[1-3]: 1
        Select the default Build-time Syslog level for Networking Components
          1. Emergency level (IPCOM_DEFAULT_SYSLOG_PRIORITY_EMERG) (NEW)
          2. Critical level (IPCOM_DEFAULT_SYSLOG_PRIORITY_CRIT) (NEW)
          3. Error level (IPCOM_DEFAULT_SYSLOG_PRIORITY_ERR) (NEW)
        > 4. Warning level (IPCOM_DEFAULT_SYSLOG_PRIORITY_WARNING) (NEW)
          5. Notice level (IPCOM_DEFAULT_SYSLOG_PRIORITY_NOTICE) (NEW)
          6. Informational level (IPCOM_DEFAULT_SYSLOG_PRIORITY_INFO) (NEW)
          7. Debug level (IPCOM_DEFAULT_SYSLOG_PRIORITY_DEBUG) (NEW)
          8. Detailed debug level (IPCOM_DEFAULT_SYSLOG_PRIORITY_DEBUG2) (NEW)
        choice[1-8?]: 4
        Enable selection of Advanced Debugging Build Options for Networking Component   (IPCOM_DEBUG_ADVANCED) [N/y/?] (NEW)
        Enable MSP Feature Set PAD  (MSP_FEATURE_PAD) [Y/n/?] (NEW) n
        Enable MSP Feature Set PCD  (MSP_FEATURE_PCD) [Y/n/?] (NEW) n
        Enable MSP Feature Set PID  (MSP_FEATURE_PID) [Y/n/?] (NEW) n
        Enable MSP Feature Set PNE  (MSP_FEATURE_PNE) [Y/n/?] (NEW) Y
        *
        * VxWorks Networking Component Configuration
        *
        *
        * Layer 2 (Link) Components
        *
        Enable L2TP  (COMPONENT_IPL2TP) [N/y/?] (NEW)
        Enable MACsec  (COMPONENT_IPMACSEC) [N/y/?] (NEW)
        Enable PPP  (COMPONENT_IPPPP) [Y/n/?] (NEW)
        Enable 802.1ad VLAN stacking  (COMPONENT_VLAN_STACKING) [N/y/?] (NEW)
        Enable WLAN  (COMPONENT_WLAN) [N/y/?] (NEW)
        *
        * Layer 3 (Network) Components
        *
        Enable FIREWALL  (COMPONENT_IPFIREWALL) [N/y/?] (NEW)
        Enable IPSEC  (COMPONENT_IPIPSEC) [N/y/?] (NEW) y
        Enable MPLS  (COMPONENT_IPMPLS) [N/y] (NEW)
        Enable ROHC  (COMPONENT_IPROHC) [N/y/?] (NEW)
        Enable IPNET Network Address Translation (NAT)  (COMPONENT_NAT) [Y/n/?] (NEW) n
        Enable Quality of Service and Differentiated Services  (COMPONENT_DIFF_SERV) [Y/n/?] (NEW) n
        Enable tunneling support  (COMPONENT_TUNNEL_SUPPORT) [Y/n/?] (NEW) n
        *
        * Layer 4 (Transport) Components
        *
        Enable SCTP  (COMPONENT_IPSCTP) [N/y/?] (NEW)
        *
        * Layer 5 (Applications) Components
        *
        Enable 802.1X Authenticator  (COMPONENT_DOT1X) [N/y/?] (NEW)
        Enable 802.1X Supplicant  (COMPONENT_IP8021X) [N/y/?] (NEW)
        Enable APPL  (COMPONENT_IPAPPL) [Y/n/?] (NEW) Y
        Enable DHCPR  (COMPONENT_IPDHCPR) [N/y] (NEW)
        Enable DHCPS  (COMPONENT_IPDHCPS) [N/y/?] (NEW)
        *
        * Diameter Components
        *
        Enable DIAMETER Client  (COMPONENT_IPDIAMETERC) [N/y/?] (NEW)
        Enable DIAMETER Proxy  (COMPONENT_IPDIAMETERP) [N/y/?] (NEW)
        Enable IKE  (COMPONENT_IPIKE) [N/y/?] (NEW)
        Enable Multicast Proxy daemon  (COMPONENT_IPMCP) [N/y/?] (NEW)
        Enable MIP  (COMPONENT_IPMIP) [N/y/?] (NEW)
        Enable MIP4  (COMPONENT_IPMIP4) [N/y/?] (NEW)
        Enable MIPFA  (COMPONENT_IPMIPFA) [N/y/?] (NEW)
        Enable MIPHA  (COMPONENT_IPMIPHA) [N/y/?] (NEW)
        Enable MIPMN  (COMPONENT_IPMIPMN) [N/y/?] (NEW)
        Enable MIPPM  (COMPONENT_IPMIPPM) [N/y/?] (NEW)
        Enable RADIUS  (COMPONENT_IPRADIUS) [Y/n/?] (NEW) n
        Enable RIP  (COMPONENT_IPRIP) [N/y] (NEW) n
        Enable SNMP  (COMPONENT_SNMP) [Y/n/?] (NEW) n
        Enable SNTP  (COMPONENT_IPSNTP) [Y/n/?] (NEW) n
        Enable SSH  (COMPONENT_IPSSH) [N/y/?] (NEW) y
        Enable SSL  (COMPONENT_IPSSL) [Y/n/?] (NEW) Y
        *
        * WPS requires COMPONENT_WLAN and COMPONENT_IPEAP and COMPONENT_IP8021X to be selected and COMPONENT_IPCRYPTO_USE_FIPS_140_2 to be deselected
        *
        *
        * Cryptography Components
        *
        *
        * Component CRYPTO preselected - required by  Component SSL
        *
        Enable CRYPTO  (COMPONENT_IPCRYPTO) [Y/?] (NEW) y
          Enable FIPS 140-2 validated crypto libraries  (COMPONENT_IPCRYPTO_USE_FIPS_140_2) [N/y/?] (NEW)
        Enable FREESCALE  (COMPONENT_IPFREESCALE) [N/y/?] (NEW) y
        Enable HWCRYPTO  (COMPONENT_IPHWCRYPTO) [N/y/?] (NEW) y
        *
        * Networking Library Components
        *
        Enable EAP  (COMPONENT_IPEAP) [N/y/?] (NEW)
        Enable VXCOMPAT  (COMPONENT_VXCOMPAT) [Y/n/?] (NEW) Y
        *
        * Networking Acceleration Platform Components
        *
        Enable IFPROXY  (COMPONENT_IFPROXY) [N/y/?] (NEW)
        Enable WRNAD  (COMPONENT_WRNAD) [N/y/?] (NEW)
        *
        * Common Analysis Framework Components
        *
        *
        * COMPONENT CAFE and COMPONENT_STACKTRACE are used by analysis tools
        *
        Enable CAFE framework  (COMPONENT_CAFE) [Y/n/?] (NEW) n
        *
        * Stacktrace Debug Component
        *
        Enable stacktrace debugging output  (COMPONENT_STACKTRACE_DEBUG) [N/y] (NEW)
        Route stacktrace debugging output to a session logger  (COMPONENT_STACKTRACE_SESSION_LOGGER) [N/y] (NEW)
        *
        * Target Communication Framework (TCF) Agent Component
        *
        Enable TCF_AGENT  (COMPONENT_TCF_AGENT) [Y/n/?] (NEW) n
        Enable WM  (COMPONENT_WM) [Y/n/?] (NEW) n
        Enable XML  (COMPONENT_XML) [Y/n/?] (NEW) Y
        *
        * VxWorks User Library Configuration
        *
        Build User-side libraries  (FEATURE_USR) [Y/n/?] (NEW) Y
          Choose the User Networking Libraries to be built
          > 1. Build libraries with IPV4 support (USR_INET4_ONLY) (NEW)
            2. Build libraries with IPV4 and IPV6 support (USR_INET6) (NEW)
            3. Build libraries with IPV6 support (USR_INET6_ONLY) (NEW)
          choice[1-3]: 1
          Build User Networking Libraries  (COMPONENT_USR_IPNET) [Y/n/?] (NEW) Y
          Build core USR APPS  (COMPONENT_USR_APPS) [Y/n/?] (NEW) Y
            Build test USR APPS  (COMPONENT_USR_TEST) [Y/n/?] (NEW) n
          Build USR libraries for DOT1X  (COMPONENT_USR_DOT1X) [N/y/?] (NEW) n
          Build USR libraries for SNMP  (COMPONENT_USR_SNMP) [N/y/?] (NEW) n
          Build USR libraries for WM  (COMPONENT_USR_WM) [N/y/?] (NEW) n
          Build USR libraries for XML  (COMPONENT_USR_XML) [Y/n/?] (NEW) Y
          Build USR libraries for SNMP_V3  (COMPONENT_USR_SNMP_V3) [N/y/?] (NEW)
          Build USR libraries for SNMP_AGENTX  (COMPONENT_USR_SNMP_AGENTX) [N/y/?] (NEW)

        This VSB supports the following BSPs: fsl_mpc8360_rdk
\ce

        Note that 'Enable MSP Feature Set PNE' must be set to 'Yes' and other
        'Enable MSP Feature Set' must be set to 'No'. And some options like
        "Enable FREESCALE" are also required to test Freescale's SEC.

    1.3 Build VSB

        Run the following command to build the libraries based on the selected 
        options.

\cs
        cd myVsb_bsp_8360rdk
        make
\ce

2. Create a VIP based on the new VSB

    2.1 Create a VIP, in the step of "Project Setup", select new VSB which is
        created above as the configuration of "A source build project", and
        select the correct BSP.

    2.2 Configure and build VIP

        In the Kernel Configuration editor include INCLUDE_IPFREESCALE. For 
        Freescale MPC8360 RDK board set two parameters as follows:

\cs
        SEC2_CORE_VERSION = "2.4"
        SEC2_DEVICE_FAMILY = "2"
\ce

        build this VIP.

    2.3 Test the Security Engine

        Download the image file, then issue the command 'freescale test all'
        from the VxWorks target shell.

        For Freescale MPC8360 RDK board you should see:

\cs
        -> ipcom_run_cmd "freescale test all"                                          
        freescale :: testing md5 hash...success                                        
        freescale :: testing md5 hmac...success                                        
        freescale :: testing sha1 hash...success                                       
        freescale :: testing sha1 hmac...success                                       
        freescale :: testing des cbc cipher...success                                  
        freescale :: testing des ecb cipher...success                                  
        freescale :: testing 3des cbc cipher...success                                 
        freescale :: testing 3des ecb cipher...success                                 
        freescale :: testing aes cbc cipher...success                                  
        freescale :: testing aes ecb cipher...success                                  
        freescale :: testing rc4 cipher...success                                      
        freescale :: testing rng oper...success                                        
        freescale :: testing mod exp...success 
\ce

\sh Network Configuration
qefcc0 and qefcc1 are configured as 10/100/1000 Ethernet ports, using
the UCC0 and UCC1 controllers.

\sh Boot Devices
The supported boot devices are:

\ts
    `qefcc0'   | - Primary Ethernet (10baseT, 100baseTX, or 1000baseT)
    `qefcc1'   | - Primary Ethernet (10baseT, 100baseTX, or 1000baseT)
\te

\sh Boot Methods
The boot methods are affected by the boot parameters.  If no password is
specified, RSH (remote shell) protocol is used.  If a password is specified,
FTP protocol is used, or, if the flag is set to 0x80, TFTP protocol is used.

SPECIAL CONSIDERATIONS

\sh TrueFFS
Not supported in this release.

\sh UBOOT loader
Below is the command of how to download VxWorks bootloader and 
write it to flash in UBOOT shell:

\cs
    1. protect off 0xffb80000 0xffbfffff
    2. erase 0xffb80000 0xffbdffff
    3. tftpboot 0x100000 bootrom.bin
    4. cp.b 0x100000 0xffb80000 0x60000
    5. go 0xffb80100
\ce

Before run download command, you need use following command to set the network:

\cs
    1. setenv ipaddr xxx.xxx.xxx.xxx
    2. setenv serverip xxx.xxx.xxx.xxx
    3. setenv gatewayip xxx.xxx.xxx.xxx
\ce

The default serial port baudrate of UBOOT is 115200.

\sh Ethernet Address
The Freescale MPC8360 RDB boards do not have unique Ethernet hardware addresses
assigned to each board. A unique address is absolutely necessary if the user
wishes to connect the board to a network. Thus, the user must provide a suitable
6-byte Ethernet address for each on-board network interface.

The definition of macro ETHERNET_MAC_HANDLER in config.h indicates the MAC
address is stored in NVRAM and alterable via the 'M' bootrom command. This
option allows only the last three bytes to be changed. To use this option,
open a console window and reset the hardware. When the bootrom banner appears
and the countdown starts, press any key to get the "[VxWorks Boot]:" prompt.
Type 'M' and follow the instructions. 

\sh Hard Reset Configuration Words
If a Wind River ICE or Probe cannot enter background mode (BKM) when attempting
to connect to the board, the Hardware Reset Configuration Words (HRCWs) in Flash
memory may have been corrupted.  To get into BKM, set the HRCWs in the processor
by entering "cf rcw 0x0804000c 0xa0600004" at the >ERR> prompt.

\sh SYSCLK Frequency
66MHz is supported

\sh Make Targets
The make targets are listed as the names of object-format files. Append `.hex'
to each to derive a hex-format file name. Other images not listed here may not
be tested.

\cs
`bootrom'
`bootrom.bin'
`bootrom.hex'
`vxWorks' (with `vxWorks.sym')
`vxWorks.st'
\ce

\sh BSP Bootloaders and Bootroms

\ts
Bootloader/Bootrom    | Status
------------------------------
Uboot (pre-flashed)   | SUPPORTED
bootrom               | SUPPORTED
bootrom_uncmp         | UNVALIDATED
vxWorks               | SUPPORTED
vxWorks_rom           | SUPPORTED
vxWorks_romCompress   | SUPPORTED
vxWorks_romResident   | SUPPORTED
\te

\sh BSP Validated Tools

\ts
Tool                          | Connection/Type   | Status
----------------------------------------------------------
Workbench Debugger            | ETHERNET/WDB      | SUPPORTED
Workbench System Viewer       | ETHERNET/WDB      | SUPPORTED
Workbench MemScope            | ETHERNET/WDB      | SUPPORTED
Workbench ProfileScope        | ETHERNET/WDB      | SUPPORTED
Workbench StethoScope         | ETHERNET/WDB      | SUPPORTED
Workbench CoverageScope       | ETHERNET/WDB      | SUPPORTED
Workbench Core File Analysis  | ETHERNET/WDB      | UNVALIDATED
Workbench Sensor Points       | ETHERNET/WDB      | UNVALIDATED
Workbench OCD Debugger        | JTAG              | SUPPORTED
Workbench OCD Flash           | JTAG              | SUPPORTED
\te

\sh Known Problems
Because of the limit of CPU's multi-user RAM size, BSP can not support all of
the 4 network ports at the same time. The default network ports we use are 
ETH1 & 2. Users can define the macro ETH_OPTION_SUPPORT in config.h to use
ETH3 & 4, but note ETH1 & 2 will be disabled.

PCI device scan can make the system hang if there is no PCI card inserted on
the board, so PCI module can only be supported in case PCI card is populated
and related macros in config.h are defined.

BOARD LAYOUT

\IMAGE images/mpc8360rdk.jpg

SEE ALSO

\tb Workbench User's Guide: Introduction
\tb VxWorks Programmer's Guide: Configuration
\tb VxWorks Programmer's Guide: Architecture Appendix

BIBLIOGRAPHY

\tb MPC8360_Reference_Manual_Rev_F

\tb MPC8360-RDK Board Manual

\tb E300 Core Reference Manual

\tb Motorola PowerPC Microprocessor Family: The Programming Environments

\tb Peripheral Component Interconnect (PCI) Local Bus Specification, Rev 2.1

WEB RESOURCES

Much of the Freescale documentation can be found on line. The following
URL was correct at the time of writing for semiconductor area. You'll 
have to search the documentation using processor name for specific documentation.

http://www.freescale.com/

