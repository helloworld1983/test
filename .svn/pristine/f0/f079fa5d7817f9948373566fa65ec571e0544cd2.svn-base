\" fsl_mds8569/target.ref - Freescale MDS8569 target specific documentation
\"
\" Copyright (c) 2009, 2011, 2012 Wind River Systems, Inc.
\"
\" The right to copy, distribute, modify or otherwise make use
\" of this software may be licensed only pursuant to the terms
\" of an applicable Wind River license agreement.
\"
\" modification history
\" --------------------
\" 01g,27feb12,c_l  update security engine description. (WIND00331832)
\" 01f,14dec11,y_c  correct description of NOR flash type. (WIND00321853)
\" 01e,29sep11,y_c  correct some false description. (WIND00306121)
\" 01d,07jul11,y_c  Support VxWorks native bootrom, SD/MMC card and 
                    QE UART as serial console. (WIND00240156)
\" 01c,26jan11,kxb  remove obsolete TFFS componen
\" 01b,19aug09,x_z  add support for QE UART.
\" 01a,19aug09,x_z  written.
\"
\TITLE fsl_mds8569 - Freescale MDS8569

\sh NAME
'Freescale MDS8569'

INTRODUCTION

This reference entry provides board-specific information necessary to run
VxWorks for the fsl_mds8569 BSP. Please read the section "Getting the board
running VxWorks" in order to configure the board to run VxWorks.

\sh Jumpers & Switches
There is 2 jumpers on the board.

Default Jumper Settings:

\ts
Jumper Number | Description                     | Setting
---------------------------------------------------------------------
JP18          | System Clock Source Selection   | 2-3: Onboard SYSCLK
JP19          | PTP Clock Source Selection      | 2-3: Onboard SYSCLK
J13           | JTAG Interface
\te

Default Switch Settings:

\ts
Switch Number | Switch ON | Switch OFF
--------------------------------------
SW1           | 2         | 1,3,4
SW5           | 3,5,7     | 1,2,4,6,8
SW6           | 1,3,4,5   | 2,6,7,8
SW7           | 2,3,4,6,7 | 1,5,8
SW8           | 1,5,6,7   | 2,3,4,8
SW9           | 3         | 1,2,4,5,6,7,8
SW10          | 6         | 1,2,3,4,5,7,8
\te

Note: The SERDES Lane E and F are used as SRIOs by default. To use them as UCC6
and UCC8 with SGMII mode, SW8[1:4] must be changed. For example, change SW8[1:4]
to [ON-OFF-ON-OFF] (0101). For more details, please refer to the vendor's
documentation :

\cs
    MPC8569E-MDS-PB Hardware Getting Started Guide
\ce

\sh Getting the board running VxWorks (boot from VxWorks Bootrom)
This section will guide you how to run VxWorks on the Freescale MDS8569 board.

1. Creating a bootrom.bin:

    Open the VxWorks Development Shell, change directory to fsl_mds8569
    BSP directory, and then build the VxWorks bootrom image.

\cs
    cd target/config/fsl_mds8569
    make bootrom.bin
\ce

2. Flashing the VxWorks bootrom image and QE microcode 

    This section will describe how to program VxWorks bootrom and QE microcode
    to the flash by using Workbench.

    2.1 Install Wind River Probe or Wind River ICE and power it on.

          Connect the JTAG interface cable from the Wind River Probe or Wind
          River ICE to the Freescale MDS8569 board's JTAG connector (J13).
          Once the connections have been made, power up the target board and
          launch Workbench on the host.

    2.2 Configure the Wind River Probe or Wind River ICE connection.

          In Workbench on the left pane, there is a "Remote Systems" window.
          Click on the "Define a connection to remote system" button. In the popup
          "New Connection" window, select the Connection type as
          "Wind River OCD ICE Connection" for Wind River ICE and "Wind River
          OCD Probe Connection" for Wind River Probe. If the Wind River ICE
          is connected via serial port, specify the configuration else select
          "Specify all communication settings manually".

          In the "Wind River ICE Settings" or "Wind River Probe Settings",
          select the Board file by clicking on the "Processor" radio button and
          browse to the appropriate CPU type. For example: "MPC8569E".
          Connect Workbench OCD with the Wind River Probe or Wind River ICE
          by clicking the "Next" and then "Finish" button. A New connection
          appears in the "Remote Systems" window.

    2.3 Program Wind River Probe / ICE with the proper register
          settings for the Freescale MDS8569 board.

          To view/modify the Wind River ICE firmware setting, terminate the
          debug session for Wind River ICE. In the "Remote Systems" window,
          right click on the newly connected OCD connection. Select
          "OCD Utilities". To know about the current firmware information,
          select "Emulator firmware version information". To download the new
          firmware, Select "Firmware Download" and select appropriate file
          from "$WIND_OCD_PATH/CommonHardwareFiles/*.bin".

          Go to the "OCD Command Shell" and click on the "Settings" button.
          The OCD Command Shell Settings dialog appears, where you can select
          the appropriate register file, which is "Freescale_MPC8569E_MDS.reg"
          After choosing the register file, press the "OK" button. In the OCD
          Command Shell, click the "Playback File" button. The selected register
          file is downloaded to the target and the commands from the file appear
          in the OCD command shell. When playback is finished the ">BKM>" or
          the ">ERR>" prompt returns.

    2.4 Get into Background Mode.

          Execute the "IN" command to reset the board and initialize it with
          the register setting.
\cs
              IN
\ce

    2.5 Program the VxWorks bootrom image to MDS8569 Flash.

          In WindRiver OCD, Select the "Flash Programmer". The "Flash Programmer"
          view has three tabs: "Configuration", "Programming" and "Memory/Diagnostics".

          2.5.1 Select the "Configuration" tab. In the "Device Selection'
                  field, select the "AMD--> S29GL256N -> 32768 x 8 -> 1 Device"

                  In "Flash Bank Address" group for the "Base" enter "FE000000" .
                  In the "RAM Workspace" group for the "Workspace Start at"
                  enter "0x00005000" and for the "Workspace Size" enter "0xffff".

          2.5.2 Click on the "Programming" tab. Select the "Add File" button, in
                  the popup window, select the newly generated
                  "$(WIND_BASE)/target/config/fsl_mds8569/bootrom.bin", and click
                  the "This is a raw binary file" checkbox then click "OK" to finish
                  file adding. Click the "Start Address" and set it as "0xfff00000",
                  the "End Address" will be fixed automatically. Please notice that
                  the "Start Address" should include the "Offset bias".
                  Enable a file by clicking on the checkbox under the "Enabled" heading.

          2.5.3 In the "Erase Sector Selection" pane, select addresses fff00000
                  through ffffffff.  Press the "Erase/Program" button to erase the
                  flash and then program the flash with selected "bootrom.bin" file.
                  A window pops up to show the progress of the Flash device
                  programming. When it is complete, the Flash should contain the
                  new boot program.

3. Running the VxWorks bootrom

    Re-power on the board, then the VxWorks bootrom should run up.

FEATURES

This section describes all features of the board, supported or not.
It documents all configurations of the board and the interaction between
features and configuration items.

\sh List of Hardware Features (Freescale MDS8569 board)

\ts
Hardware Interface | Controller | Driver/Component   | Status
-------------------------------------------------------------
UART:0             | on-chip    | vxbNs16550Sio.c    | SUPPORTED
UART:1             | on-chip    | vxbNs16550Sio.c    | SUPPORTED
QE UART:0          | on-chip    | vxbUccSio.c        | SUPPORTED
1GB-ETHERNET:0     | on-chip    | vxbUccEnd.c        | SUPPORTED
1GB-ETHERNET:1     | on-chip    | vxbUccEnd.c        | SUPPORTED
1GB-ETHERNET:2     | on-chip    | vxbUccEnd.c        | SUPPORTED
1GB-ETHERNET:3     | on-chip    | vxbUccEnd.c        | SUPPORTED
1GB-ETHERNET:4     | on-chip    | vxbUccEnd.c        | SUPPORTED
1GB-ETHERNET:5     | on-chip    | vxbUccEnd.c        | SUPPORTED
NOR-FLASH          | S29GL256N  | flashmem.c/TFFS    | SUPPORTED
NAND-FLASH         | K9F5608U0D | -                  | UNSUPPORTED
TIMER              | on-chip    | vxbM85xxDecTimer.c | SUPPORTED
TIMER              | on-chip    | vxbM85xxFITimer.c  | SUPPORTED
TIMER              | on-chip    | vxbM85xxWDTimer.c  | SUPPORTED
PCI-E-HOST         | on-chip    | m85xxPci.c         | SUPPORTED
I2C                | on-chip    | sysMpc85xxI2c.c    | SUPPORTED
RTC                | DS1374     | ds1374.c           | SUPPORTED
SPI                | on-chip    | -                  | UNSUPPORTED
SRIO               | on-chip    | -                  | UNSUPPORTED
USB2-HOST          | on-chip    | -                  | UNSUPPORTED
USB2-DEVICE        | on-chip    | -                  | UNSUPPORTED
ENCRYPTION         | on-chip    | ipfreescale        | SUPPORTED
SD-CARD            | on-chip    | vxbSdhcStorage.c   | SUPPORTED
\te

\sh Feature Interactions
The RTC depends on the I2C bus 0.

HARDWARE DETAILS

This section documents the details of the device drivers and board
hardware elements.

\sh Verified Hardware
This BSP has been verified on Rev 1.23 of Freescale MDS8569 prototype board. The
default clock speed for MDS8569 is 1066MHz core, 533MHz CCB and 533MHz QE. The
PROTOTYPE label can be found on the GETH2 interface.

\sh Memory Maps
The following table describes the default memory map of this BSP.

\ts
Start       | Size  | End         | Access to
---------------------------------------------
0x0000_0000 |   1GB | 0x3FFF_FFFF | DDR SDRAM
0xA000_0000 |  64MB | 0xA3FF_FFFF | PCIe Prefetchable Memory
0xA400_0000 |  64MB | 0xA7FF_FFFF | PCIe Non-Prefetchable Memory
0xA800_0000 |  64MB | 0xABFF_FFFF | PCIe IO
0xC000_0000 | 256MB | 0xCFFF_FFFF | SRIO
0xE000_0000 |   1MB | 0xE00F_FFFF | CCSR
0xE040_0000 | 512KB | 0xE047_FFFF | L2SRAM
0xF800_0000 |  32KB | 0xF800_7FFF | BCSR
0xFC00_0000 |  32MB | 0xFDFF_FFFF | NAND FLASH
0xFE00_0000 |  32MB | 0xFFFF_FFFF | NOR FLASH
\te

\sh Serial Configuration
No special configuration needed.
Default configuration is:
    Baud Rate: 9600
    Data: 8 bit
    Parity: None
    Stop: 1 bit
    Flow Control: None

Note: DUART(UART0 and UART1) is used by default and the UART1 is used as
the default serial console(UART0 is mutually exclusive with eSDHC function).

and if QE UART is needed, the following macro in config.h should be modified:

\cs
    #undef  DRV_SIO_UCC
\ce

to

\cs
    #define DRV_SIO_UCC
\ce

To use QE UART as serial console, the CONSOLE_TTY should be changed to 0:

\cs
    #define CONSOLE_TTY                 0
\ce

Then QE UART will be connected to COM2. But, QE UART is mutually exclusive with
DUART, and is UCC2 actually. So the  UART0, UART1 and UCC2 can not be used at
this time.

\sh Network Configuration
On the Freescale MDS8569 board, there are 6 Ethernet interfaces. UCC1 and UCC2
are connected to the GETH1 and GETH2 directly. UCC3 and UCC4 are connected to
GETH3 an GETH4 via the UEM (Universal Ethernet Module). UCC6 and UCC8 are
connected to SERDES Lane E and F via the UEM. To use UCC6 and UCC8, SW8[1:4]
must be modified to configure the SERDES Lane E and F as the SGMII mode.For
example, change SW8[1:4] to [ON-OFF-ON-OFF] (0101). For more details, please
refer to the vendor's documentation:

\cs
    MPC8569E-MDS-PB Hardware Getting Started Guide
\ce

Note: UCC2 can work with UART mode if DRV_SIO_UCC is used enable QE UART.

All the ethernet ports allow 10/100/1000T connection. The driver will
auto-negotiate and configure the port accordingly. But MPC8569 can support up to
4 Ethernet ports at best, so only the 4 UCCs can be enabled at the same time.
Otherwise, hwconf.c needs to be modified to enable other UCCs. Everyone of the 4
Ethernet ports can be mapped to anyone of all the 6 UCCs. UCC1/UCC2/UCC3/UCC4 is
mapped by default, and UCC1/UCC6/UCC3/UCC4 is mapped if UCC2 works with UART
mode.

Note: The UEM plastic guide pins are recommended to use for the UEMs.

The BSP also supports Intel 8257x based NICs via PCIe. See the gei825xxVxbEnd
driver for the supported mode numbers.

The following END driver is supported in this BSP.

\ts
Driver | END
------------
UCC   | INCLUDE_UCC_VXB_END
\te

\sh Boot Devices
The supported boot devices are:

\ts
    `qefcc0' | UCC1 by default
    `qefcc1' | UCC2 by default
    `qefcc2' | UCC3 by default
    `qefcc3' | UCC4 by default
    `gei'    | Intel Pro1000 Ethernet PCI adaptor when the PCIe bus is enabled
    `tffs'   | TFFS when INCLUDE_TFFS is defined in config.h
\te

\sh Boot Methods
The boot methods are affected by the boot parameters.  If no password is
specified, RSH (remote shell) protocol is used.  If a password is specified,
FTP protocol is used, or, if the flag is set to 0x80, TFTP protocol is used.

\sh L2 Cache
L2 Cache is configured with callback function pointers for L2 cache Global
Invalidation, L2 Cache Enable, L2 Cache Flush and L2 Cache Disable are
initialized in sysHwInit(). By default, the 512 KB L2 is configured to 512 KB
of cache. If a different configuration is desired, a new bootrom image should
be used to match the RAM image configuration of L2.

\sh PCIe Access
On the Freescale MDS8569 board, one PCIe slot can be supported by inserting the
PEX adaptor board to the SERDES Lane and can be configured as the PCIe x1, x2,
or x4 mode by changing the switch SW8[1:4]. For more details, please refer to
the vendor's documentation:

\cs
    MPC8569E-MDS-PB Hardware Getting Started Guide
\ce

In order to support PCIe devices in this BSP, please define the following macro
in config.h:

\cs
    #define DRV_PCIBUS_M85XX
\ce

The Intel 8257x Gigabit Ethernet adapter is one of the tested PCIe device
supported in this release. Define INCLUDE_GEI825XX_VXB_END and
INCLUDE_GENERICPHY in config.h to enable this device.

This BSP defaults to use PCIe legacy interrupts. To enable PCIe MSI interrupt,
please define following macro in config.h:

\cs
    #define INCLUDE_INTCTLR_DYNAMIC_LIB
\ce

\sh RTC
The real-time clock used on the board is the Maxim Semiconductor DS1374. Address
and data are transferred serially through the I2C interface. The device exists
on the I2C bus 0. To use the device, define INCLUDE_I2C and INCLUDE_RTC in
config.h first. Then type the following commands to get the seconds elapsed
since 1970/01/01

\cs
    sysDS1374GetTime
\ce

or the following commands to set the seconds in the vxWorks target shell.

\cs
    sysDS1374SetTime xxx
\ce

Note: xxx is the seconds elapsed since 1970/01/01.

SPECIAL CONSIDERATIONS

\sh TrueFFS
The standard Wind River TrueFFS product is supported in this release.

This BSP uses the Spansion S29GL256N flash as the TrueFFS media.
The FLASH address space that is used as TrueFFS is 0xfe000000 - 0xfeffffff.

Note: Bootloader and TFFS are sharing the same flash part, so please be very
careful because misusing of TFFS may damage the bootloader and cause the
board failure to boot up.

To use it, define INCLUDE_TFFS in config.h.  If you want to use TFFS with DOSFS
file system, please define the following macros in config.h.

\cs
    #define INCLUDE_DOSFS
    #define INCLUDE_DOSFS_MAIN
    #define INCLUDE_DOSFS_FAT
    #define INCLUDE_DOSFS_FMT
    #define INCLUDE_DOSFS_DIR_VFAT
    #define INCLUDE_DOSFS_DIR_FIXED
    #define INCLUDE_ERF
    #define INCLUDE_XBD
    #define INCLUDE_XBD_TRANS
    #define INCLUDE_XBD_BLK_DEV
    #define INCLUDE_DEVICE_MANAGER
    #define INCLUDE_FS_MONITOR
    #define INCLUDE_FS_EVENT_UTIL
    #define INCLUDE_TL_FTL
\ce

When using TrueFFS on a new FLASH for the first time, you should format and
configure the FLASH by using:

\cs
    sysTffsFormat ();
    usrTffsConfig (0, 0, "/tffs0");
\ce

If you are using DOSFS, please use

\cs
    dosfsDiskFormat ("/tffs0");     /@ For VxWorks 6.6 and later version @/
\ce

Note: If you are running these commands in the VxWorks target shell, please use

\cs
    sp sysTffsFormat
\ce

to format the FLASH as it would take long time to complete.

You should now be able to use VxWorks I/O and file system commands to access
the FLASH device as if it were a disk.  For example, you can copy a vxWorks
image from your host to TFFS by using file system 'copy'.  Of course, you should
define INCLUDE_DISK_UTIL in config.h first.

\cs
    copy ("vxWorks", "/tffs0/vxWorks");
\ce

If you want to use "/tffs0" as a boot device, you should follow the instructions:

For command line mode, make sure INCLUDE_TFFS is defined in config.h, re-build
a bootrom from the BSP directory under VxWorks Development Shell, and program
it into the flash chip.  Also make sure you have all the necessary file system
components defined in config.h.

For project mode with PROFILE_BOOTAPP profile under Workbench, you should make
sure to include the following components in the Kernel Configuration Window:

\cs
    INCLUDE_DOSFS
    INCLUDE_DOSFS_MAIN
    INCLUDE_DOSFS_FAT
    INCLUDE_DOSFS_FMT
    INCLUDE_DOSFS_DIR_VFAT
    INCLUDE_DOSFS_DIR_FIXED
    INCLUDE_ERF
    INCLUDE_XBD
    INCLUDE_XBD_TRANS
    INCLUDE_XBD_BLK_DEV
    INCLUDE_DEVICE_MANAGER
    INCLUDE_FS_MONITOR
    INCLUDE_FS_EVENT_UTIL
    INCLUDE_TFFS_MOUNT
    INCLUDE_TL_FTL
\ce

Then right click the project, select "Build Options\Set Active Build Spec...",
check the "default_romCompress" box, you will see "vxWorks.bin(default_romCompress)"
item is listed in the project, right click it and select "Build Target", this
will generate a default_romCompress.bin in the project directory, program
it into the flash chip as a bootrom.

Below is an example by using /tffs as a boot device:

\cs
    boot device          : fs
    unit number          : 0
    processor number     : 0
    host name            : host
    file name            : /tffs0/vxWorks
\ce

\sh SD memory card controller (eSDHC)
The MPC8569's on chip enhanced SD host controller (eSDHC), connected to socket
J37 on the board, supports standard SD memory cards compatible with SD memory 
card specification 2.0. But the eSDHC driver does not support MMC cards and 
high speed SD memory cards.

To enable eSDHC support, make sure the following feature definitions are
added in config.h:

\cs
    #define DRV_STORAGE_SDHC
\ce

Use of the internal DMA engine, and selection of interrupt vs. polling mode,
are configured by setting the values of 'dmaMode' and 'polling' in hwconf.c.
For example, to select interrupt mode and enable use of the internal DMA engine:

\cs
    /@ hwconf.c @/
    ...
    struct hcfResource sdhcResources[] = {
    ...
        { "dmaMode",      HCF_RES_INT,    { (void *)0 } },
        { "polling",      HCF_RES_INT,    { (void *)0 } },
    };
    ...
\ce

When using an SD card for the first time, you should format it as a FAT file
system by using:

\cs
    dosFsVolFormat ("/sd0:1", 0x20, 0);    /@ FAT32 format @/
\ce

or

\cs
    dosFsVolFormat ("/sd0:1", 0x10, 0);    /@ FAT16 format @/
\ce

Now, you can use VxWorks I/O and file system commands to access the SD card
device as if it is a disk.  For example, you can copy a vxWorks image from
your host to the SD card by using file system copy. Of course, you should
define INCLUDE_DISK_UTIL in config.h first.

\cs
    copy ("vxWorks", "/sd0:1/vxWorks");
\ce

If you want to use SD card as a boot device, you should follow these steps:

For command line mode, make sure DRV_STORAGE_SDHC, INCLUDE_BOOT_FILESYSTEMS
is defined in config.h, re-build a bootrom from the BSP directory under VxWorks
Development Shell, and program it into the flash chip. Also make sure you have
all the necessary file system components defined in config.h.

For project mode with PROFILE_BOOTAPP profile under Workbench, you should make
sure to include the following components in the Kernel Configuration Window:

\cs
    DRV_STORAGE_SDHC
    INCLUDE_ERF
    INCLUDE_DEVICE_MANAGER
    INCLUDE_FS_EVENT_UTIL
    INCLUDE_FS_MONITOR
    INCLUDE_XBD
    INCLUDE_XBD_BLK_DEV
    INCLUDE_XBD_TRANS
    INCLUDE_DOSFS
    INCLUDE_DOSFS_DIR_FIXED
    INCLUDE_DOSFS_DIR_VFAT
    INCLUDE_DOSFS_FAT
    INCLUDE_DOSFS_FMT
    INCLUDE_DOSFS_MAIN
    INCLUDE_BOOT_FILESYSTEMS
    INCLUDE_DISK_UTIL   
\ce

Then right click the project, select "Build Options\Set Active Build Spec...",
check the "default_romCompress" box, you will see "vxWorks.bin(default_romCompress)"
item is listed in the project, right click it and select "Build Target", this
will generate a default_romCompress.bin in the project directory, program
it into the flash chip as a bootrom.

Below is an example by using SD card "/sd0:1" as a boot device:

\cs
    boot device          : fs
    unit number          : 0
    processor number     : 0
    host name            : host
    file name            : /sd0:1/vxWorks
    inet on ethernet (e) : 192.168.0.3:ffffff00
    host inet (h)        : 192.168.0.2
    gateway inet (g)     : 192.168.0.1
    user (u)             : target
    ftp password (pw)    : vxTarget
    flags (f)            : 0x0
    target name (tn)     : fsl_mds8569
    other (o)            : motetsec0
\ce

Note: INCLUDE_BOOT_FILESYSTEMS macro is only used for bootrom/bootapp stage, and conflict
with vxWorks image, so undef it after you've finished startup.

\sh Security Engine
Freescale Security Engine (SEC) 3.1 is supported in this release.
VxWorks MSP must be installed to enable security engine offload.

The following steps describe how to enable SEC support of this BSP.

1. Create a VSB (VxWorks Source Build)

    1.1 Create a VSB project

        Open the VxWorks Development Shell, type the following command to create
        a VSB project based on fsl_mds8569 BSP.

\cs
        vxprj vsb create -bsp fsl_mds8569
\ce

        This command creates a VSB for the BSP fsl_mds8569, vsb_fsl_mds8569  is
        the name of this VSP.

    1.2 Configure VSB

        After run the command in step 1.1, you will be prompted to select the
        configuration options of this new VSB. Below is a example of
        configuration result:

\cs
        Creating VSB Project ...
        starting VSB configuration...
        *
        * VxWorks Source Build (VSB) Configuration
        *
        *
        * VxWorks Global Configuration Options for BSP fsl_mds8569
        *
        Set advanced options  (ADVANCED_OPT) [N/y/?] (NEW) y
        *
        * fsl_mds8569_CPU = PPC32
        *
        Select the Floating Point configuration
        > 1. e500v2 (FP_e500v2) (NEW)
          2. soft (FP_soft) (NEW)
        choice[1-2?]: 1
        Select the Primary Tool
        > 1. diab (PRI_TOOL_ILP32_diab) (NEW)
        choice[1]: 1
        Enable use of Secondary TOOL to build kernel libraries.  (ENABLE_TOOL2_ILP32) [Y/n/?] (NEW) Y
          Select the Secondary Tool
          > 1. gnu (SEC_TOOL_ILP32_gnu) (NEW)
          choice[1]: 1
        Select the Applications Tool
        > 1. diab (APP_TOOL_ILP32_diab) (NEW)
          2. gnu (APP_TOOL_ILP32_gnu) (NEW)
        choice[1-2?]: 1
        *
        * ppc Architecture Options
        *
        Low-level arch code need not support inconsistent cache modes  (PPC_CACHE_MODE_IS_CONSISTENT) [N/y/?] (NEW)
        System Viewer Instrumentation  (SV_INSTRUMENTATION) [Y/n/?] (NEW) Y
        Global Debug Flag  (DEBUG_FLAG) [N/y/?] (NEW)
        Real-Time Process (RTP)  (RTP) [Y/n/?] (NEW) Y
        *
        * VxWorks Kernel Configuration Options
        *
        *
        * VxWorks Kernel Component Configuration
        *
        WIND Object Management  (OBJECT_MANAGEMENT) [Y/n/?] (NEW) Y
          WIND Object ID Validation  (OBJECT_VERIFICATION) [Y/n/?] (NEW) Y
        Task Create Hooks  (TASK_CREATE_HOOKS_D) [Y/n/?] (NEW) Y
        Task Switch Hooks  (TASK_SWITCH_HOOKS_D) [Y/n/?] (NEW) Y
        CPU Power Management  (CPU_PWR_MGMT_D) [Y/n/?] (NEW) Y
        *
        * Multi-OS Support
        *
        MIPC  (COMPONENT_MIPC) [Y/n/?] (NEW) n
        WRLOAD  (COMPONENT_WRLOAD) [Y/n/?] (NEW) n
        *
        * Optional Kernel Features
        *
        Enable Kernel Per-Task CWD  (PERTASK_CWD) [Y/n/?] (NEW)
        *
        * File System Configuration
        *
        Set Maximum Device Name Length  (MAX_DEVNAME) [10] (NEW)
        Optimize NFS3 server read/write procedure  (NFS3_RWOPT) [N/y/?] (NEW)
        Set factor for maximum block size transferred in NFS3 server  (NFS3_BLKSIZE_FACTOR) [1] (NEW)
        Enable VXTESTV2  (COMPONENT_VXTESTV2_D) [Y/n/?] (NEW)
        Enable BENCHMARK tests  (COMPONENT_BENCHMARK) [N/y/?] (NEW)
        Enable Code Coverage Analyzer test instrumentation of VSB   (COMPONENT_COVERAGE) [N/y/?] (NEW)
        *
        * VxWorks Applications Configuration Options
        *
        Select networking code to be built
        > 1. Build Networking IPNET Libraries (COMPONENT_IPNET) (NEW)
          2. No Networking Libraries (NO_IP) (NEW)
        choice[1-2]: 1
        *
        * Networking Build Options
        *
        Set the IPNET build mode
        > 1. speed mode (BUILD_MODE_speed) (NEW)
          2. debug mode (BUILD_MODE_debug) (NEW)
        choice[1-2]: 1
        Enable VERBOSE mode  (FEATURE_IPNET_VERBOSE) [N/y] (NEW) y
        Generate IPNET Dependencies  (FEATURE_IPNET_GEN_DEPEND) [Y/n] (NEW) Y
        Build basic IPNET support libraries  (BUILD_BASIC_IPNET) [Y/n/?] (NEW) Y
        Choose the Networking Libraries to be built
        > 1. Build libraries with IPV4 support (FEATURE_IPNET_INET4_ONLY) (NEW)
          2. Build libraries with IPV4 and IPV6 support (FEATURE_IPNET_INET6) (NEW)
          3. Build libraries with IPV6 support (FEATURE_IPNET_INET6_ONLY) (NEW)
        choice[1-3]: 1
        Select the default Build-time Syslog level for Networking Components
          1. Emergency level (IPCOM_DEFAULT_SYSLOG_PRIORITY_EMERG) (NEW)
          2. Critical level (IPCOM_DEFAULT_SYSLOG_PRIORITY_CRIT) (NEW)
          3. Error level (IPCOM_DEFAULT_SYSLOG_PRIORITY_ERR) (NEW)
        > 4. Warning level (IPCOM_DEFAULT_SYSLOG_PRIORITY_WARNING) (NEW)
          5. Notice level (IPCOM_DEFAULT_SYSLOG_PRIORITY_NOTICE) (NEW)
          6. Informational level (IPCOM_DEFAULT_SYSLOG_PRIORITY_INFO) (NEW)
          7. Debug level (IPCOM_DEFAULT_SYSLOG_PRIORITY_DEBUG) (NEW)
          8. Detailed debug level (IPCOM_DEFAULT_SYSLOG_PRIORITY_DEBUG2) (NEW)
        choice[1-8?]: 4
        Enable selection of Advanced Debugging Build Options for Networking Component   (IPCOM_DEBUG_ADVANCED) [N/y/?] (NEW)
        Enable MSP Feature Set PAD  (MSP_FEATURE_PAD) [Y/n/?] (NEW) n
        Enable MSP Feature Set PCD  (MSP_FEATURE_PCD) [Y/n/?] (NEW) n
        Enable MSP Feature Set PID  (MSP_FEATURE_PID) [Y/n/?] (NEW) n
        Enable MSP Feature Set PNE  (MSP_FEATURE_PNE) [Y/n/?] (NEW) Y
        *
        * VxWorks Networking Component Configuration
        *
        *
        * Layer 2 (Link) Components
        *
        Enable L2TP  (COMPONENT_IPL2TP) [N/y/?] (NEW)
        Enable MACsec  (COMPONENT_IPMACSEC) [N/y/?] (NEW)
        Enable PPP  (COMPONENT_IPPPP) [Y/n/?] (NEW) 
        Enable 802.1ad VLAN stacking  (COMPONENT_VLAN_STACKING) [N/y/?] (NEW)
        Enable WLAN  (COMPONENT_WLAN) [N/y/?] (NEW)
        *
        * Layer 3 (Network) Components
        *
        Enable FIREWALL  (COMPONENT_IPFIREWALL) [N/y/?] (NEW)
        Enable IPSEC  (COMPONENT_IPIPSEC) [N/y/?] (NEW)
        Enable MPLS  (COMPONENT_IPMPLS) [N/y] (NEW)
        Enable ROHC  (COMPONENT_IPROHC) [N/y/?] (NEW)
        Enable IPNET Network Address Translation (NAT)  (COMPONENT_NAT) [Y/n/?] (NEW) n
        Enable Quality of Service and Differentiated Services  (COMPONENT_DIFF_SERV) [Y/n/?] (NEW) n
        Enable tunneling support  (COMPONENT_TUNNEL_SUPPORT) [Y/n/?] (NEW) n
        *
        * Layer 4 (Transport) Components
        *
        Enable SCTP  (COMPONENT_IPSCTP) [N/y/?] (NEW)
        *
        * Layer 5 (Applications) Components
        *
        Enable 802.1X Authenticator  (COMPONENT_DOT1X) [N/y/?] (NEW)
        Enable 802.1X Supplicant  (COMPONENT_IP8021X) [N/y/?] (NEW)
        Enable APPL  (COMPONENT_IPAPPL) [Y/n/?] (NEW) Y
        Enable DHCPR  (COMPONENT_IPDHCPR) [N/y] (NEW)
        Enable DHCPS  (COMPONENT_IPDHCPS) [N/y/?] (NEW)
        *
        * Diameter Components
        *
        Enable DIAMETER Client  (COMPONENT_IPDIAMETERC) [N/y/?] (NEW)
        Enable DIAMETER Proxy  (COMPONENT_IPDIAMETERP) [N/y/?] (NEW)
        Enable IKE  (COMPONENT_IPIKE) [N/y/?] (NEW)
        Enable Multicast Proxy daemon  (COMPONENT_IPMCP) [N/y/?] (NEW)
        Enable MIP  (COMPONENT_IPMIP) [N/y/?] (NEW)
        Enable MIP4  (COMPONENT_IPMIP4) [N/y/?] (NEW)
        Enable MIPFA  (COMPONENT_IPMIPFA) [N/y/?] (NEW)
        Enable MIPHA  (COMPONENT_IPMIPHA) [N/y/?] (NEW)
        Enable MIPMN  (COMPONENT_IPMIPMN) [N/y/?] (NEW)
        Enable MIPPM  (COMPONENT_IPMIPPM) [N/y/?] (NEW)
        Enable RADIUS  (COMPONENT_IPRADIUS) [Y/n/?] (NEW) n
        Enable RIP  (COMPONENT_IPRIP) [N/y] (NEW)
        Enable SNMP  (COMPONENT_SNMP) [Y/n/?] (NEW) n
        Enable SNTP  (COMPONENT_IPSNTP) [Y/n/?] (NEW) n
        Enable SSH  (COMPONENT_IPSSH) [N/y/?] (NEW) y
        Enable SSL  (COMPONENT_IPSSL) [Y/n/?] (NEW) Y
        *
        * WPS requires COMPONENT_WLAN and COMPONENT_IPEAP and COMPONENT_IP8021X to be selected and COMPONENT_IPCRYPTO_USE_FIPS_140_2 to be deselected
        *
        *
        * Cryptography Components
        *
        *
        * Component CRYPTO preselected - required by  Component SSL
        *
        Enable CRYPTO  (COMPONENT_IPCRYPTO) [Y/?] (NEW) y
          Enable FIPS 140-2 validated crypto libraries  (COMPONENT_IPCRYPTO_USE_FIPS_140_2) [N/y/?] (NEW)
        Enable FREESCALE  (COMPONENT_IPFREESCALE) [N/y/?] (NEW) y
        Enable HWCRYPTO  (COMPONENT_IPHWCRYPTO) [N/y/?] (NEW) y
        *
        * Networking Library Components
        *
        Enable EAP  (COMPONENT_IPEAP) [N/y/?] (NEW)
        Enable VXCOMPAT  (COMPONENT_VXCOMPAT) [Y/n/?] (NEW) Y
        *
        * Networking Acceleration Platform Components
        *
        Enable IFPROXY  (COMPONENT_IFPROXY) [N/y/?] (NEW)
        Enable WRNAD  (COMPONENT_WRNAD) [N/y/?] (NEW)
        *
        * Common Analysis Framework Components
        *
        *
        * COMPONENT CAFE and COMPONENT_STACKTRACE are used by analysis tools
        *
        Enable CAFE framework  (COMPONENT_CAFE) [Y/n/?] (NEW) n
        *
        * Stacktrace Debug Component
        *
        Enable stacktrace debugging output  (COMPONENT_STACKTRACE_DEBUG) [N/y] (NEW)
        Route stacktrace debugging output to a session logger  (COMPONENT_STACKTRACE_SESSION_LOGGER) [N/y] (NEW)
        *
        * Target Communication Framework (TCF) Agent Component
        *
        Enable TCF_AGENT  (COMPONENT_TCF_AGENT) [Y/n/?] (NEW) n
        Enable WM  (COMPONENT_WM) [Y/n/?] (NEW) n
        Enable XML  (COMPONENT_XML) [Y/n/?] (NEW) Y
        *
        * VxWorks User Library Configuration
        *
        Build User-side libraries  (FEATURE_USR) [Y/n/?] (NEW) Y
          Choose the User Networking Libraries to be built
          > 1. Build libraries with IPV4 support (USR_INET4_ONLY) (NEW)
            2. Build libraries with IPV4 and IPV6 support (USR_INET6) (NEW)
            3. Build libraries with IPV6 support (USR_INET6_ONLY) (NEW)
          choice[1-3]: 1
          Build User Networking Libraries  (COMPONENT_USR_IPNET) [Y/n/?] (NEW) Y
          Build core USR APPS  (COMPONENT_USR_APPS) [Y/n/?] (NEW) Y
            Build test USR APPS  (COMPONENT_USR_TEST) [Y/n/?] (NEW) n
          Build USR libraries for DOT1X  (COMPONENT_USR_DOT1X) [N/y/?] (NEW) n
          Build USR libraries for SNMP  (COMPONENT_USR_SNMP) [N/y/?] (NEW) n
          Build USR libraries for WM  (COMPONENT_USR_WM) [N/y/?] (NEW) n
          Build USR libraries for XML  (COMPONENT_USR_XML) [Y/n/?] (NEW) Y
          Build USR libraries for SNMP_V3  (COMPONENT_USR_SNMP_V3) [N/y/?] (NEW)
          Build USR libraries for SNMP_AGENTX  (COMPONENT_USR_SNMP_AGENTX) [N/y/?] (NEW)
 
        This VSB supports the following BSPs: fsl_mds8569
\ce

        Note that 'Enable MSP Feature Set PNE' must be set to 'Yes' and other
        'Enable MSP Feature Set' must be set to 'No'. And some options like
        "Enable FREESCALE" are also required to test Freescale's SEC.

    1.3 Build VSB

        Run the following command in vsb_fsl_mds8569 directory to build
        the VSB libraries.

\cs
        make
\ce

2. Create a VIP based on the new VSB

    2.1 Create a VIP, in the step of "Project Setup", select new VSB which is
        created above as the configuration of "A source build project", and
        select the correct BSP.

    2.2 Configure and build VIP

        In the Kernel Configuration editor include INCLUDE_IPFREESCALE.
        Set two parameters as follows:

\cs
        SEC2_CORE_VERSION = "3.1"
        SEC2_DEVICE_FAMILY = "3"
\ce

        Build vxWorks image of this VIP.

    2.3 Test the Security Engine

        Boot the target with the image file, and type the following command
        in the VxWorks target shell to test the security engine.

\cs
        -> ipcom_run_cmd "freescale test all"                                          
        freescale :: testing md5 hash...success                                        
        freescale :: testing md5 hmac...success                                        
        freescale :: testing sha1 hash...success                                       
        freescale :: testing sha1 hmac...success                                       
        freescale :: testing des cbc cipher...success                                  
        freescale :: testing des ecb cipher...success                                  
        freescale :: testing 3des cbc cipher...success                                 
        freescale :: testing 3des ecb cipher...success                                 
        freescale :: testing aes cbc cipher...success                                  
        freescale :: testing aes ecb cipher...success                                  
        freescale :: testing rc4 cipher...success                                      
        freescale :: testing rng oper...success                                        
        freescale :: testing mod exp...success  
\ce

\sh Ethernet Address
The Freescale MDS8569 board has unique Ethernet hardware addresses assigned to
each board.  A unique address is absolutely necessary if the user wishes to
connect the board to a network.  Thus, the user must provide a suitable
6-byte Ethernet address for each on-board network interface.

The definition of macro ETHERNET_MAC_HANDLER in config.h indicates the MAC
address is stored in NVRAM and alterable via the 'M' bootrom command.  This
option allows only the last three bytes to be changed. To use this option,
open a console window and reset the hardware. When the bootrom banner appears
and the countdown starts, press any key to get the "[VxWorks Boot]:" prompt.
Type 'M' and follow the instructions.

\sh Make Targets
The make targets are listed as the names of object-format files. Append `.hex'
to each to derive a hex-format file name. Other images not listed here may not
be tested.

\ts
`bootrom'
`bootrom.bin'
`bootrom.hex'
`vxWorks' (with `vxWorks.sym')
`vxWorks.st'
\te

\sh BSP Bootloaders and Bootroms

\ts
Bootloader/Bootrom  | Status
----------------------------
U-Boot (pre-flashed)| SUPPORTED
bootrom             | SUPPORTED
bootrom_uncmp       | SUPPORTED
bootrom_res         | UNSUPPORTED
vxWorks             | SUPPORTED
vxWorks_rom         | UNSUPPORTED
vxWorks_romCompress | SUPPORTED
vxWorks_romResident | UNSUPPORTED
\te

\sh BSP Validated Tools

\ts
Tool                         | Connection/Type | Status
-------------------------------------------------------
Workbench Debugger           | ETHERNET/WDB    | SUPPORTED
Workbench System Viewer      | ETHERNET/WDB    | SUPPORTED
Workbench MemScope           | ETHERNET/WDB    | SUPPORTED
Workbench ProfileScope       | ETHERNET/WDB    | SUPPORTED
Workbench StethoScope        | ETHERNET/WDB    | SUPPORTED
Workbench CoverageScope      | ETHERNET/WDB    | SUPPORTED
Workbench Core File Analysis | ETHERNET/WDB    | UNVALIDATED
Workbench Sensor Points      | ETHERNET/WDB    | UNVALIDATED
Workbench OCD Debugger       | JTAG            | UNSUPPORTED
Workbench OCD Flash          | JTAG            | SUPPORTED
\te

\sh Known Problems
The QE UART and the eSDHC can't be enabled at the same time as there is
a bug in the board's CPLD, which makes the two component mutually exclusive.

The size of default vxWorks_rom image is greater than 1 MB, which is bigger than
the default ROM_SIZE.  ROM_SIZE and the corresponding link addresses can be
adjusted to make vxWorks_rom work, however it is an unsupported configuration.

The GETH PHYs for all the 6 UCCs excpet the UCC1 may not work fine at some time.
When the issue appears, the link status LED will be off. To resolve the issue,
please hard reset or power down and power on the board for some times. The issue
appears with U-Boot.

This vxWorks_romResident image is unsupported in this release, as it will take
several minutes to boot up.  For more details, or to check if a workaround has
been posted since the writing of this document, see WIND00136433.

When rebooting a vxWorks romCompress image using Ctrl+X, it will take long time
to boot up.  For more details, or to check if a workaround has been posted since
the writing of this document, see WIND00149773.

BOARD LAYOUT
Front Side
\bs
+-------------|---+---+-------------+------------------------+
|             |USB|   |     DDR     |                        |
|             |---+   |    SDRAM    |         +---+          +-----------------+
|       +-+           +-------------+    +-+  |SW1|  +-+                   +---|
|       |G|                              |L|  +---+  |L|                   |5V |
|-----+ |E|                              |A|         |A|                   +---|
|GETH2| |T|                              |N|         |N|                    o  |
|-----+ |H|                              |E|         |E|    +-----------+ POWER|
|       |4|                              |f|         |a|    | BCSR PROG |   o  |
|       +-+                              +-+         +-+    +-----------+  HRST|
|                                                            o    o   o     o  |
|       +-+             +-------------+  +-+         +-+    LED1 LED2 LED3 SRST|
|       |G|             |             |  |L|         |L|        +-------------+|
|-----+ |E|             |             |  |A|         |A|        | CPU JTAG    ||
|GETH1| |T|             |    M P C    |  |N|         |N|        +-------------+|
|-----+ |H|             |    8569E    |  |E|         |E|           +---+ +----+|
|       |3|             |             |  |e|         |b|           |SW5| |SW6 ||
|       +-+             |             |  +-+         +-+    o   o  +---+ +----+|
|                       +-------------+                    J18 J19 +---+ +----+|
|                                                                  |SW7| |SW8 ||
|                                                       +------+   +---+ +----+|
|            +-------+                                  | NOR  |   +---+ +----+|
|            | DUART |                                  |FLASH |   |SW9| |SW10||
|            ---------                                  +------+   +---+ +----+|
+------------------------------------------------------------------------------+
\be

Back Side
\bs
             +-----------------------------------------------------------------+
             |                                         +----------+            |
             |                                         |          |            |
+------------+                                         |   SD     |            |
|                                                      |  CARD    |            |
|                                                      |          |            |
|                                                      |          |            |
|                                                      +----------+            |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|                                                                              |
|           +------+                                                           |
|           | NAND |                                                           |
|           |FLASH |                                                           |
|           +------+                                                           |
+------------------------------------------------------------------------------+
\be

SEE ALSO

\tb Workbench User's Guide: Introduction

\tb VxWorks Programmer's Guide: Configuration

\tb VxWorks Programmer's Guide: Architecture Appendix

BIBLIOGRAPHY

\tb PowerPC e500 Core Family Reference Manual

\tb QUICC Engine Block Reference Manual with Protocol Interworking

\tb MPC8569E PowerQUICC III Integrated Processor Reference Manual

\tb MPC8569E-MDS-PB HW User Guide

\tb MPC8569E-MDS-PB Hardware Getting Started Guide

\tb MPC8569E-MDS-PB Schematics

\tb Motorola PowerPC Microprocessor Family: The Programming Environments
