\" fsl_rdb8323/target.ref - Freescale MPC8323RDB target specific documentation
\"
\" Copyright (c) 2006, 2009-2010 Wind River Systems, Inc.
\"
\" The right to copy, distribute, modify or otherwise make use
\" of this software may be licensed only pursuant to the terms
\" of an applicable Wind River license agreement.
\"
\" modification history
\" --------------------
\" 01c,150ct10,kab  Changed BSP name from rdb8323 to fsl_rdb8323
\" 01b,03jun09,e_d  Update by new Template.
\" 01a,07nov06,pmr  Adapted from mds8323 BSP target.ref.
\"
\TITLE fsl_rdb8323 - Freescale MPC8323RDB

\sh NAME
`Freescale RDB8323'

INTRODUCTION
This reference entry provides board-specific information necessary to run
VxWorks for the fsl_rdb8323 BSP.

\sh Getting the board running VxWorks 
This section will guide you how to run VxWorks on the Freescale MPC8323RDB board.

1. Creating a bootrom.bin:
    1.1 Launch Workbench 3.1, go to the "File" menu and choose the option
        "New" -> "VxWorks Boot Loader / BSP Project".

    1.2 The "New VxWorks Boot Loader / BSP Project" window will popup, input a
        project name then click "Next" button. In the next window, choose the BSP
        as "fsl_rdb8323", "Tool chain" could be set as "sfdiab", in the 
        "Boot loader / BSP image" part, choose the style as "Compressed (default)",
        "Format" as "Bin", then press the "Finish" button to finish the project
        creation.

    1.3 Once the build process finish successfully (You will see "Build Finished"
        in the "Build Console" window without error), you will find the file
        "bootrom.bin" in the BSP directory "$(WIND_BASE)/target/config/fsl_rdb8323". 

2. Programming bootrom.bin to the RDB8323 FLASH:
   Support for RDB8323 part is available with Workbench 3.1.

   Using Workbench, complete the following steps to flash your boot ROM image:

    2.1 Install Wind River Probe or Wind River ICE and power it on.

        Connect the JTAG interface cable from the Wind River Probe or Wind 
        River ICE to the RDB8323 board's JTAG connector (P8).
        Once the connections have been made, power up the RDB8323 
        board and launch Workbench on the host.     

    2.2 Configure the Wind River Probe or Wind River ICE connection.

        In Workbench on the left pane, there is a "Remote Systems" window. 
        Click on the "Define a connection to remote system" button. In the popup
        "New Connection" window, select the Connection type as 
        "Wind River OCD ICE Connection" for Wind River ICE and "Wind River 
        OCD Probe Connection" for Wind River Probe. If the Wind River ICE 
        is connected via serial port, specify the configuration else select
        "Specify all communication settings manually". 

        In the "Wind River ICE Settings" or "Wind River Probe Settings", 
        select the Board file by clicking on the "Board file" radio button and
        browse to the appropriate board file. For example:
        "$WIND_OCD_PATH/BoardFiles/PowerPC/83xx/Generic/Generic_MPC8323.brd"
        Select "Auto-attach to connected designators" checkbox. In the 
        "Communications" tab, "Emulator Hostname / IP address" of ICE for Wind 
        River ICE or "USB Device Name" for Wind River Probe. Connect 
        Workbench OCD with the Wind River Probe or Wind River ICE 
        by clicking the "Next" and then "Finish" button. A New connection 
        appears in the "Remote Systems" window.

    2.3 Program Wind River Probe / Wind River ICE with the proper register 
        settings for the RDB8323 board.

        To view/modify the Wind River ICE firmware setting, terminate the
        debug session for Wind River ICE. In the "Remote Systems" window,
        right click on the newly connected OCD connection. Select 
        "OCD Utilities". To know about the current firmware information, 
        select "Emulator firmware version information". To download the new
        firmware, Select "Firmware Download" and select appropriate file 
        from "$WIND_OCD_PATH/CommonHardwareFiles/*.bin".

        Go to the "OCD Command Shell" and click on the "Settings" button.
        The OCD Command Shell Settings dialog appears, where you can 
        select the appropriate register file. Navigate to the location of
        the appropriate register configuration file. The folder of register 
        file is '$(WIND_BASE)/target/config/fsl_rdb8323\', the register file
         of RDB8323 board is 'rdb8323.reg'.

        After choosing the register file, press the "OK" button. In the OCD Command
        Shell, click the "Playback File" button. The selected register file is
        downloaded to the target and the commands from the file appear in the
        OCD command shell. When playback is finished the ">BKM>" or the ">ERR>"
        prompt returns.

    2.4 Get into Background Mode.

        Execute the "IN" command to reset the board and initialize it with
        the register setting.
\cs
            IN
\ce
        Type 'mmb 0xf800000a 0x0' at the BKM Prompt to unlock flash write protection.
        If you have problems resetting the board using ICE/Probe you can use
        from bkm prompt in the OCD command shell 
        BKM>cf rcw 0x42050083 0xa0600000.

    2.5 Program the RDB8323 Flash.

        In WindRiver OCD, Select the "Flash Programmer". The 
        "Flash Programmer" view has three tabs: "Configuration", 
        "Programming" and "Memory/Diagnostics".

        2.5.1 Select the "Configuration" tab. In the "Device Selection' 
            field, select the "INTEL 28F128Jx (8192x16) 1 Device" for 
            RDB8323 board. 

            In "Flash Bank Address" group for the "Base" enter "FE000000" . 
            In the "RAM Workspace" group for the "Workspace Start at"
            enter "0x00000000" and for the "Workspace Size" enter 
            "0xFFFF".

        2.5.2 Click on the "Programming" tab. Select the "Add File" 
            button, in the popup window, select the newly generated
            "$(WIND_BASE)/target/config/fsl_rdb8323/bootrom.bin", and click
            the "This is a raw binary file" checkbox then click "OK" to finish
            file adding. Click the "Start Address" and set it as "0xfe000000",
            the "End Address" will be fixed automatically. Please notice that
            the "Start Address" should include the "Offset bias".
            Enable a file by clicking on the checkbox under the "Enabled" heading.

        2.5.3 In the "Erase Sector Selection" pane, select addresses
            fe000000 through fe0fffff.  Press the "Erase/Program" 
            button to erase the flash and then program the flash with selected
            "bootrom.bin" file. A window pops up to show the progress of the
            Flash device programming. When it is complete, the Flash should
            contain the new boot program.

FEATURES

This section describes all features of the board, supported or not.
It documents all configurations of the board and the interaction between
features and configuration items.

\sh List of Hardware Features (Freescale MPC8323RDB board)

\ts
Hardware Interface | Controller | Driver/Component  | Status
------------------------------------------------------------
UART:0             | on-chip    | vxbns16550sio.c   | SUPPORTED
UART:1             | on-chip    | vxbns16550sio.c   | SUPPORTED
100MBIT-ETHERNET:0 | on-chip    | vxbUccEnd.c       | SUPPORTED
100MBIT-ETHERNET:1 | on-chip    | vxbUccEnd.c       | SUPPORTED
100MBIT-ETHERNET:2 | on-chip    | vxbUccEnd.c       | SUPPORTED
NOR-FLASH          | 28F128Jx   | -                 | SUPPORTED
TIMER              | on-chip    | vxbPpcDecTimer.c  | SUPPORTED
TIMER              | on-chip    | vxbPpcQuiccTimer.c| SUPPORTED
I2C                | on-chip    | sysMpc8323I2c.c   | SUPPORTED
PCI-MASTER         | on-chip    | m83xxPci.c        | SUPPORTED
USB2-HOST          | NEC720102  | -                 | SUPPORTED
DMA                | on-chip    | -                 | UNSUPPORTED
\te

\sh Feature Interactions
Refer to the board vendor's documentation.

HARDWARE DETAILS

This section documents the details of the device drivers and board
hardware elements.

\sh Verified Hardware
This BSP has been verified on Rev.1 of Freescale MPC8323E-RDB board.

\sh Memory Maps
The following table describes the default memory map of this BSP.

\ts
Start       | Size  | End         | Access to
---------------------------------------------
0x0000_0000 |  64MB | 0x03FF_FFFF | DDR SDRAM
0x8000_0000 | 128MB | 0x87FF_FFFF | PCI Prefetchable Memory
0x8800_0000 |  64MB | 0x8BFF_FFFF | PCI Non-Prefetchable Memory
0x8C00_0000 |  64MB | 0x8FFF_FFFF | PCI IO
0xE000_0000 |   1MB | 0xE03F_FFFF | IMMR
0xFE00_0000 |  16MB | 0xFEFF_FFFF | NOR Flash
\te

\sh PCI Access
There is only one PCI slot on the Freescale MPC8323 RDB board.

In order to support PCI devices in this BSP, please define following macros in
config.h first:

\cs
    #   define INCLUDE_PCI_BUS
\ce

The Intel Pro100+ (82559) PCI Ethernet adapter is one tested PCI device
supported in this release. Define INCLUDE_FEI8255X_VXB_END in config.h to
enable this device.

\sh USB Host support
USB Enhanced Host Controller driver has been integrated into this BSP,
to enable it, you should modify as follows:

For command line build, define INCLUDE_USB in config.h, this will include
the following items automatically: the EHCI host controller, bulk only mass
storage class driver and DOS file system. You can also add other USB class
drivers in config.h, then rebuild the bootrom or vxWorks image.

For project build under Workbench, in the Kernel Configuration Window of your
created VxWorks Image Project, add INCLUDE_USB component, which will
automatically include EHCI host controller driver, then add USB class drivers
which you want, then rebuild your project. For example:

To support USB mass storage device, you can include the following components:

\cs
    INCLUDE_USB_MS_BULKONLY
    INCLUDE_USB_MS_BULKONLY_INIT
    INCLUDE_DOSFS
    INCLUDE_DOSFS_MAIN
    INCLUDE_DOSFS_CHKDSK
    INCLUDE_DOSFS_FMT
    INCLUDE_FS_MONITOR
    INCLUDE_ERF
    INCLUDE_XBD
    INCLUDE_DEVICE_MANAGER
    INCLUDE_XBD_PART_LIB
    INCLUDE_DOSFS_FAT
    INCLUDE_DOSFS_DIR_VFAT
    INCLUDE_XBD_BLK_DEV
\ce

Note: Mass storage device has been verified on the target.
 
For more information, please refer to 
\tb Wind River USB for VxWorks 6 PROGRAMMER'S GUIDE 

\sh Serial Configuration
No special configuration needed.
Default configuration is:
    Baud Rate: 9600
    Data: 8 bit
    Parity: None
    Stop: 1 bit
    Flow Control: None

\sh Network Configuration
The following END driver is supported in this BSP.

\ts
Driver  | END
------------
qefcc   | INCLUDE_UCC_VXB_END
\te
The MPC8323RDB board is wired to use UCC2, UCC3 and UCC4 as 10/100 ethernet
ports. UCC2 and UCC3 are connected to an on-board ICplus IP175C 5 port
switch controller, while UCC4 is wired to a header to which an optional
DSL module can be connected. The ICplus switch module supports several
different port configurations, but on the MPC8323RDB board, it's set up
so that 4 of its external ports are ganged together in a 4 port switch,
while the 5th acts as a standalone PHY. In a typical application, MPC8323
might be programmed to act as a firewalled gateway or NAT router, where
several protected/NATed hosts can be connected to the 4 ports attached
to UCC2 (the 'interna' network), and the standalone port on UCC3 can be
used as the WAN-facing port (the 'external' network). (Alternatively,
UCC3 can be used as an internal 'DMZ' port while the optional DSL module
on UCC4 can act as the gateway port.)

The front panel of the 8323RDB is wired with 5 RJ-45 jacks in a configuration
similar to the diagram below:
\bs
            +......+
            .port 5.---------------------+
            .qefcc1.                     |
     +------+------+                     |       +---------------+
     |port 0|port 1|                     |       |               | 
     |      |      |  +------+           |       |   MPC 8323    |
     +------+------+  |port 4|           |       |               |
     |port 2|port 3|  |qefcc0|---------+ +-------|UCC2       UCC4|-----||
     |      |      |  +------+         |         |               |
     |------+------|  |      |         +---------|UCC3           |
   --+-------------+--+------+---                +---------------+
\be

Ports 0 though 5 all operate as a single switch. Port 5 is not actually
connected to a front panel jack, but is instead directly wired to UCC2.
When UCC2 autonegotiates a link, it does it with port 5, not directly
with any of the external connections on ports 0 through 3. In effect,
this means that UCC2 is not really able to sense link state changes on
on ports 0-3: as far as it knows, UCC2 is always effectively plugged
into port 5 on the switch and cannot be disconnected. (It is possible
to monitor the link state on ports 0-3 if desired, by querying the
miiRead and miiWrite methods on the icpPhy driver.)

Port 4 is configured as a standalone PHY, directly connected to UCC3.

The ICplus switch module supports an MDIO management interface, allowing
the PHYs on all ports to be configured via the MIIMCOM interface on the
UCC (using the SPI2 serial interface port on the QUICCEngine). The port
numbers shown here correspond to MDIO management addresses which can be
used to access the registers for each port's PHY. By default, the BSP
programs the QUICCEngine so that UCC2 is the master of the MDIO
interface.

UCC3 (the standalone port) corresponds to the qefcc0 network interface.
UCC2 corresponds to qefcc1. The UCC4 interface is configured by default
and corresponds to qefcc2, however it may require some additional setup
in order to function correctly. The optional DSL module is not included
with the MPC8323RDB kit and has not been tested at this time. UCC4 has been
set in hwconf.c to use phyAddr 10 on the uccMdio0 device, but this address
is a dummy value that doesn't correspond to an actual PHY, so UCC4's link
state is always down. These hwconf properties will have to be changed to
correspond to the actual physical media link that's present when the DSL
module is installed (or possibly set to a dummy device that always
presents a valid link).

\sh Boot Devices
The supported boot devices are:

\ts
    `qefcc0' | MPC8323E-RDB on-chip fast ethernet controller
    `qefcc1' | MPC8323E-RDB on-chip fast ethernet controller
    `fei'    | Intel Pro100 Ethernet PCI adaptor when the PCI bus is enabled
\te

(A qefcc2 device instance also exists, but requires the optional DSL
module to be connected in order to function.)

\sh Boot Methods
The boot methods are affected by the boot parameters.  If no password is
specified, RSH (remote shell) protocol is used.  If a password is specified,
FTP protocol is used, or, if the flag is set to 0x80, TFTP protocol is used.

SPECIAL CONSIDERATIONS
This section describes miscellaneous information that the user needs
to know about the BSP.

\sh Delivered Objects

\sh Make Targets
The make targets are listed as the names of object-format files. Append `.hex'
to each to derive a hex-format file name. Other images not listed here may not
be tested.

\ts
    `bootrom'
    `bootrom.bin'
    `bootrom.hex'
    `vxWorks' (with `vxWorks.sym')
    `vxWorks.st'
\te

\sh Serial Connections
Most VxWorks BSPs do not use hardware handshaking in the serial
interface, and thus a simple 3 wire connection is commonly used.

See also "Known Problems" below.

\sh Ethernet Address
The MPC8323 RDB boards do not have a unique Ethernet hardware
address assigned to each board.  A unique address is absolutely necessary if
the user wishes to connect the board to a network.  Thus, the user
must provide a suitable 6 byte Ethernet address for each board used
on a network. The address is now stored in flash with the bootline.
Use the 'M' command to modify for a distinct MAC address. 

\sh Known Problems
vxWorks does not implement support of critical exceptions.
Issue with unmapped address access when MMU is enabled is hanging the board. 
It can cause reboot/vxMemProbe to fail on occasion. Cause is unknown yet but 
can clear the state with debugger using sync command, memory access and 
resume, not always successful.
CPU4 errata means that unpopulated address access when MMU is disabled is 
hanging the board. It is possible to clear the state with debugger using 
sync command,memory access and resume, not always successful. 

\sh Power-on Reset Initialization
The state of the chip post reset is controlled via the HRCW.
The hardware reset configuration word(HRCW) is set via programming a bootrom.
The definitions are in rdb8323.h and are set in config.h. To change this 
setting you must modify config.h and rebuild and replace the bootrom.

\sh BSP Bootloaders and Bootroms

\ts
Bootloader/Bootrom   | Status
-----------------------------
U-Boot (pre-flashed) | UNSUPPORTED
bootrom              | SUPPORTED
bootrom_uncmp        | SUPPORTED
bootrom_resident     | UNSUPPORTED
vxWorks              | SUPPORTED
vxWorks_rom          | SUPPORTED
vxWorks_romCompress  | SUPPORTED
vxWorks_romResident  | SUPPORTED
\te

\sh BSP Validated Tools

\ts
Tool                         | Connection/Type | Status
-------------------------------------------------------
Workbench Debugger           | ETHERNET/WDB    | SUPPORTED
Workbench System Viewer      | ETHERNET/WDB    | SUPPORTED
Workbench MemScope           | ETHERNET/WDB    | SUPPORTED
Workbench ProfileScope       | ETHERNET/WDB    | SUPPORTED
Workbench StethoScope        | ETHERNET/WDB    | SUPPORTED
Workbench CoverageScope      | ETHERNET/WDB    | SUPPORTED
Workbench Core File Analysis | ETHERNET/WDB    | UNVALIDATED
Workbench Sensor Points      | ETHERNET/WDB    | UNVALIDATED
Workbench OCD Debugger       | JTAG            | SUPPORTED
Workbench OCD Flash          | JTAG            | SUPPORTED
\te

\sh CPU support
MPC8323 is default for HRCW and 64bit DDR.

\sh SYSCLK Frequency
66MHz is supported

BOARD LAYOUT
The diagram below shows top view of RDB8323 board.
\bs
   +-----|----------------|------------------+---+--+---+---------------------+
   |     |     SDCARD     |                  | M |  | M |                     |
   |     +----------------+                  | I |  | I |             +-------+
   |                                         | N |  | N |             |       |
   |                                         | I |  | I |             | UART  |
   |     +----------------+                  | P |  | P |             |       |
   |     |PCI SLOT        |                  | C |  | C |             +-------+
   |     |                |                  | I |  | I |                     |
   |     +----------------+                  +---+  +---+                     |
   |                                                                          |
   |                                                                          |
   |                      +---------+  +--------+                             |
   |                      |         |  |IP175C  |                             |
   |                      |         |  |PHY     |                             |
   |                      |  MPC8323|  +--------+                             |
   |                      |         |                                         |
   |                      |         |                                         |
   |                      +---------+                                         |
   |                                                                   +------+
   |                                                                   |GETH1 |
   |                                                                   +------+
   |                                                                          |
   |                                                                   +------+
   |                                                                   |GETH2 |
   +-------+                                                           +------+
   |JATG   |                                                                  |
   |       |                                                           +------+
   +-------+                                                           |GETH3 |
   |                                                                   +------+
   |                                                                          |
   +--------------------------------------------------------------------------+
\be

SEE ALSO
\tb Workbench User's Guide: Getting Started, 
\tb VxWorks Programmer's Guide: Configuration, 
\tb VxWorks Programmer's Guide: Architecture Supplement 

BIBLIOGRAPHY

\tb MPC8323 Reference Manual 
\tb MPC8323RDB Board Manual 
\tb E300 Core Reference Maunual 
\tb PowerPC Microprocessor Family: The Programming Environments for 32-bit Microprocessors MPCFPE32B/AD 

WEB RESOURCES

Much of the Freescale documentation can be found on line. The following
URL was correct at the time of writing for semiconductor area. You'll have to search the documentation using processor name for specific documentation.

http://www.freescale.com/


